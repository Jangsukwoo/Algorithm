<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2020-05-13T14:43:56Z</updated>
  <entry>
    <title>Introduction to Azure Spring Cloud with IntelliJ IDEA</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/13/introduction-to-azure-spring-cloud-with-intellij-idea" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Andy Clement</name>
    </author>
    <id>tag:spring.io,2020-05-01:4052</id>
    <updated>2020-05-13T14:43:56Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/services/spring-cloud/"&gt;Azure Spring Cloud&lt;/a&gt;?is a new Platform as a Service offering for Microservices apps. It is a fully managed service jointly built, operated, and supported by Pivotal and Microsoft to simplify spring boot based microservices development and management. In this blog, we will walk through how you can accelerate your development with Azure Spring Cloud and IntelliJ IDEA.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="requirements"&gt;&lt;a class="anchor" href="#requirements"&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You will need a few things prepared before following the upcoming sections:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.jetbrains.com/idea/download/#section=windows"&gt;IntelliJ IDEA, Community/Ultimate Edition, version 2020.1/2019.3 installed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/free/"&gt;An Azure Account&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/developer/java/toolkit-for-intellij/create-hello-world-web-app#installation-and-sign-in"&gt;Azure Toolkit for IntelliJ installed and signed-in&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/spring-cloud/spring-cloud-quickstart-launch-app-portal#provision-a-service-instance-on-the-azure-portal"&gt;An Azure Spring Cloud instance provisioned&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="prepare-your-spring-application"&gt;&lt;a class="anchor" href="#prepare-your-spring-application"&gt;&lt;/a&gt;Prepare your Spring application&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;First, let&amp;#8217;s start from a simple &lt;a href="https://github.com/spring-guides/gs-spring-boot"&gt;sample Spring Boot project&lt;/a&gt;, one of the &lt;a href="https://spring.io/guides"&gt;Spring Getting Started Guides&lt;/a&gt;.  We need to clone the repository:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code&gt;git clone git@github.com:spring-guides/gs-spring-boot.git&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;And import the final form of the project, contained in the &lt;code&gt;complete&lt;/code&gt; subfolder of that clone:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/add-dependency.png" alt="Imported Project"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To enable Azure Spring Cloud features (discovery service, config server, etc) a set of &lt;a href="https://docs.microsoft.com/en-us/azure/spring-cloud/spring-cloud-tutorial-prepare-app-deployment"&gt;dependencies&lt;/a&gt; is needed. The Azure Toolkit for IntelliJ will help with that. Right-click on the project and select &lt;strong&gt;Azure &amp;#8594; Add Azure Spring Cloud dependency&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/add-dependency-2.png" alt="Add Azure Spring Cloud dependency"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A set of dependencies will be added to the &lt;code&gt;pom.xml&lt;/code&gt;. The version is calculated based on existing dependencies in the pom, but feel free to edit them if you know what you are doing. Then, click &lt;strong&gt;Import Changes&lt;/strong&gt; on the bottom right to resolve dependencies automatically.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/add-dependency-3.png" alt="Resolving adding dependencies"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Except the &lt;code&gt;spring-cloud-starter-azure-spring-cloud-client&lt;/code&gt;, the dependencies added are not hard requirements. They are recommended to enable the full Azure Spring Cloud feature set including Eureka, Config Server, monitoring, distributed tracing, etc. Let¡¯s add the discovery client annotation in your &lt;code&gt;Application.java&lt;/code&gt;, so that the application will be discoverable via a Eureka server once deployed to Azure Spring Cloud.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/add-annotation.png" alt="Add annotation"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="deploy-your-app-to-azure-spring-cloud"&gt;&lt;a class="anchor" href="#deploy-your-app-to-azure-spring-cloud"&gt;&lt;/a&gt;Deploy your app to Azure Spring Cloud&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now, let¡¯s go ahead and deploy the app to Azure Spring Cloud. With the help of Azure Toolkit for IntelliJ IDEA, this will be super easy. Right-click on the project and select &lt;strong&gt;Azure &amp;#8594; Deploy to Azure Spring Cloud&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/deploy.png" alt="App deployment"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In the pop-up configuration window, select the right subscription and Azure Spring Cloud instance you have provisioned; create a new app named &lt;strong&gt;demo&lt;/strong&gt; and enable &lt;strong&gt;Public Endpoint&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/deploy-config.png" alt="Configuring deployment" width="626" height="725"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Click &lt;strong&gt;Run&lt;/strong&gt; and you will see the app built and deployed in a few minutes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/deploy-log.png" alt="Configuring deployment"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The application should immediately be accessible via the URL printed to the console. Congratulations for your first Azure Spring Cloud app deployed from IntelliJ IDEA!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/access-endpoint.png" alt="Accessing the application"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="view-your-app-status-and-logs"&gt;&lt;a class="anchor" href="#view-your-app-status-and-logs"&gt;&lt;/a&gt;View your app status and logs&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To manage your Spring Cloud app, navigate to your Azure Explorer panel on the left and find the app just deployed under Spring Cloud nodes. Right-click on the app, select &lt;strong&gt;Show Properties&lt;/strong&gt; and you will see the tap show up on the right. Here you can perform common actions like restart/delete/scale/editing JVM options and modifying environment variables. Take a closer look at the Instances details and you can see that the app now has one instance running and registered to Eureka server since the discover status is UP. For further operations, select &lt;strong&gt;Open in Portal&lt;/strong&gt; in the right-click menu to explore more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/app-properties.png" alt="App properties"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;It¡¯s also super easy to stream the logs to your IDEA. Right-click on your app in the explorer, select &lt;strong&gt;Streaming Logs&lt;/strong&gt;, select the instance in the pop-up windows and then you will see logs showing up soon. For a full logs analysis experience, explore Azure Spring Cloud¡¯s seamless &lt;a href="https://docs.microsoft.com/en-us/azure/spring-cloud/diagnostic-services"&gt;integration&lt;/a&gt; with Azure Monitor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://static.spring.io/blog/aclement/20200511/log-stream.png" alt="Log Streaming"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="learn-more-about-java-on-azure"&gt;&lt;a class="anchor" href="#learn-more-about-java-on-azure"&gt;&lt;/a&gt;Learn more about Java on Azure&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To learn more about Java on Azure, Azure Spring Cloud and Azure tools for Java developers, check out the links below!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/developer/java/"&gt;Java on Azure Developer Center&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/spring-cloud/"&gt;Azure Spring Cloud Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/developer/java/fundamentals/"&gt;Azure Tools for Java developers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;And follow for &lt;a href="https://twitter.com/JavaAtMicrosoft"&gt;Twitter&lt;/a&gt; the latest news about Java on Azure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>CVE reports published for Spring Security</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/13/cve-reports-published-for-spring-security" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Eleftheria Stein-Kousathana</name>
    </author>
    <id>tag:spring.io,2020-05-13:4070</id>
    <updated>2020-05-13T13:55:24Z</updated>
    <content type="html">&lt;p&gt;We have released Spring Security 5.3.2, 5.2.4, 5.1.10, 5.0.16 and 4.2.16 to address the following CVE reports:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://tanzu.vmware.com/security/cve-2020-5407"&gt;CVE-2020-5407: Signature Wrapping Vulnerability with spring-security-saml2-service-provider&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tanzu.vmware.com/security/cve-2020-5408"&gt;CVE-2020-5408: Dictionary attack with Spring Security queryable text encryptor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please review the information in the CVE report and upgrade immediately.&lt;/p&gt;
&lt;p&gt;Spring Boot users should upgrade to &lt;a href="https://spring.io/blog/2020/05/07/spring-boot-2-2-7-available-now"&gt;2.2.7&lt;/a&gt; or &lt;a href="https://spring.io/blog/2020/05/07/spring-boot-2-1-14-available-now"&gt;2.1.14&lt;/a&gt;.&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Neumann goes GA</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/12/spring-data-neumann-goes-ga" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2020-05-12:4069</id>
    <updated>2020-05-12T13:14:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;p&gt;On behalf of the Spring Data team and many contributors, it is my pleasure to announce that Spring Data Neumann is generally available from &lt;a href="https://repo.spring.io/"&gt;repo.spring.io&lt;/a&gt; as well as Maven Central! This release ships with over &lt;a href="https://jira.spring.io/issues/?filter=16930"&gt;650 features, bugfixes and improvements&lt;/a&gt; containing numerous major version and driver upgrades. &lt;/p&gt;
&lt;p&gt;This very tightly curated overview summarizes the most significant changes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Repository support for Kotlin Coroutines.&lt;/li&gt;
  &lt;li&gt;Upgrade to MongoDB Driver 4.&lt;/li&gt;
  &lt;li&gt;Upgrade to Cassandra Driver 4.&lt;/li&gt;
  &lt;li&gt;Upgrade to Couchbase SDK 3&lt;/li&gt;
  &lt;li&gt;Upgrade to Querydsl 4.3&lt;/li&gt;
  &lt;li&gt;Upgrade to Elasticsearch 7 and fully revise Template API for consistent Elasticsearch usage.&lt;/li&gt;
  &lt;li&gt;Inclusion of Spring Data R2DBC into the release train.&lt;/li&gt;
  &lt;li&gt;Merge of Spring Data for Apache Geode and Spring Data GemFire into a single Spring Data Geode module.&lt;/li&gt;
  &lt;li&gt;Joda-Time and ThreeTenBackport support deprecated.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over the coming days, we are going to publish several blog posts that outline the new and noteworthy items of this release.&lt;/p&gt;
&lt;p&gt;With the upcoming Spring Boot 2.3 release, you will be fully able to consume Spring Data Neumann, including all necessary infrastructure changes. Check out specifically the migration guides of each module to simplify the upgrade. We hope you enjoy it :-)&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br/&gt;Mark&lt;/p&gt;
&lt;p&gt;PS: Here are the links to each module:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JDBC 2.0 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.0.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.0.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.0.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.0.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Geode 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 5.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/5.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/5.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/5.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/5.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 3.0 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.0.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.0.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.0.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.0.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 3.0 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.0.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.0.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.0.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.0.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 4.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/4.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.2.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data R2DBC 1.1 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.1.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.1.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.1.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.1.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 3.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 2.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.3.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 4.0 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.0.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 4.0 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.0.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.0.0.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.0.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.0.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - May 12th, 2020</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/12/this-week-in-spring-may-12th-2020" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2020-05-12:4068</id>
    <updated>2020-05-12T11:24:37Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! I hope you&amp;rsquo;re all doing well, staying safe, taking socially distant walks every day to get some fresh air and exercise, and so on. I&amp;rsquo;m trying my best to stay sane. We just crossed into month three-under quarantine, having gone into quarantine on 11 March 2020. It&amp;rsquo;s pretty crazy to think about how slowly and quickly time has flown. &lt;/p&gt;
&lt;p&gt;One of the things that makes me happy? Learning new things. This weekly roundup, &lt;em&gt;This Week in Spring&lt;/em&gt;, has always been a lot of fun for me. It&amp;rsquo;s become even more of a privilege in the age of quarantine, having something to learn and soak up. I &lt;em&gt;know&lt;/em&gt; that most of us will get through this, but I&amp;rsquo;ve been very keen on not letting this time go to waste for me. It&amp;rsquo;s &lt;em&gt;exhausting&lt;/em&gt; to live under this quarantine. It&amp;rsquo;s exhausting to be anxious about things. I completely understand the instinct to want to just stay in bed until it all blows over. It&amp;rsquo;s completely normal. You&amp;rsquo;re allowed to be anxious, to worry, to feel despair. I have those days, too. But, I have found it helpful to try to plan activities with my family and to focus on backburner projects. And I find walking to be helpful. My condo&amp;rsquo;s gym is closed because of the coronavirus pandemic. I&amp;rsquo;ve nonetheless found walking, meditation, or really any fairly mindless activity, supports the process of learning. Anyway, that&amp;rsquo;s just me, friends. &lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve had particularly good success in the quarantine, I&amp;rsquo;d love to hear what&amp;rsquo;s worked for you. &lt;a href="http://twitter.com/starbuxman"&gt;Sound off on Twitter (@starbuxman)&lt;/a&gt;. Stay safe and healthy friends. &lt;/p&gt;
&lt;p&gt;Alright, we&amp;rsquo;ve got a lot to get to so let&amp;rsquo;s get to it! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/12/getting-started-with-rsocket-servers-calling-clients"&gt;Getting Started With RSocket: Servers Calling Clients&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/11/spring-cloud-task-2-3-0-m1-is-now-available"&gt;Spring Cloud Task 2.3.0-M1 is now available!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/11/spring-security-oauth2-auto-config-2-3-0-rc1-2-2-7-2-1-14-released"&gt;Spring Security OAuth2 Auto-config 2.3.0.RC1, 2.2.7, 2.1.14 Released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/07/a-bootiful-podcast-spring-and-java-community-member-edd-mel-ndez-on-his-journey-to-contributing-to-spring"&gt;A Bootiful Podcast: Spring and Java community member Edd? Mel?ndez on his journey to contributing to Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/07/tanzu-observability-by-wavefront-spring-boot-starter"&gt;Tanzu Observability by Wavefront Spring Boot Starter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/07/spring-security-5-4-0-m1-released"&gt;Spring Security 5.4.0-M1 Released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/07/spring-boot-2-2-7-available-now"&gt;Spring Boot 2.2.7 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/07/spring-boot-2-1-14-available-now"&gt;Spring Boot 2.1.14 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/07/end-of-life-for-spring-security-oauth"&gt;End-of-Life for Spring Security OAuth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/06/spring-tips-season-7-recap"&gt;Spring Tips: Season 7 Recap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;On a personal note, I am honored to have in the last week have been made a Google Developer Expert for Kotlin. It&amp;rsquo;s a recognition of my contributions to advocating Kotlin. I am humbled by the recognition. Thank you, community, for loving Kotlin as much as I do. I am already a Java Champion, and now a Google Developer Expert for Kotlin. If it was not obvious, I love the JVM ecosystem. I am one of the few Google GDE&amp;rsquo;s on Kotlin on the server-side, and that&amp;rsquo;s entirely because of the vibrant and wonderful community surrounding Spring and their use of Kotlin.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/@jaidenashmore/jwt-authentication-in-spring-boot-webflux-6880c96247c7"&gt;JWT Authentication in Spring Boot Webflux - Jaiden Ashmore - Medium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Take a look at how to add trace, logging, and prometheus monitoring to your application to extract essential metrics &lt;a href="https://youtu.be/JqxMTQ2-VIE"&gt;in Ray Tsang&amp;rsquo;s (@saturnism) #SpringLive session&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to learn more about @SpringData? Join @habuma at next week&amp;rsquo;s Denver and Boulder JUG meeting for a talk on Essential Spring!&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tanzu.vmware.com/developer/"&gt;Have you seen the new VMWare Tanzu Developer center?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hi, my friends! I&amp;rsquo;ll be doing &lt;a href="https://www.meetup.com/CloudDC/events/270504493/?_xtd=gqFyqTMwMDAxMzY1MKFwpmlwaG9uZQ&amp;from=ref"&gt;a presentation on Tuesday, June 9, 2020 for the Cloud DC meetup - please join me!&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5d_dy7RVcpE"&gt;Develop Spring Boot Microservices on GCP with Spring Cloud GCP - a great talk by Ray Tsang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I love this part &lt;a href="https://twitter.com/springcentral/status/1258854443409387524"&gt;of the SpringOne Platform 2019 keynote&lt;/a&gt;: &amp;quot;Originally [Netflix&amp;rsquo;s Java] libraries and frameworks were built in-house. I&amp;rsquo;m very proud to say, as of early 2019, we&amp;rsquo;ve moved our platform almost entirely over to Spring Boot.¡± -Taylor Wicksell, Senior Software Engineer Netflix&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://piotrminkowski.com/2020/03/10/best-practices-for-microservices-on-kubernetes/"&gt;Best Practices For Microservices on Kubernetes ? Piotr&amp;rsquo;s TechBlog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;What you can expect at #SpringOne? Find out and &lt;a href="https://t.co/xX8RBAmxwb"&gt;sign up here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/spring_io/status/1255057313926393857"&gt;Spring I/O on Twitter: &amp;quot;Our main conference has been postponed to October, but that¡¯s too far away! &#x1f4e3; Announcing SPRING I/O BRIDGE, a one-day free virtual event for the Spring community. &#x1f5d3;15th May @ 9am CEST &#x1f449; Register here: https://t.co/vxJT3b&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/swlh/how-to-visualize-a-spring-integration-graph-with-neo4j-61927ba5bb5a"&gt;How to visualize a Spring Integration graph with Neo4j?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/reactive-arch-rsocket-spring-cloud/?itm_campaign=rightbar_v2&amp;itm_source=infoq&amp;itm_medium=presentations_link&amp;itm_content=link_text"&gt;Reactive Architectures with RSocket and Spring Cloud Gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out this &lt;a href="https://github.com/mmanciop/instana-springboot-starter"&gt;Spring Boot Starter for monitoring your Spring apps with Instana.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://t.co/G2cSiOf2IP"&gt;Tanzu Observability for Wavefront&lt;/a&gt; delivers scalable observability as a service where Spring developers can build analytics-driven dashboards based on multi-sourced data including metrics, traces, histograms, and span logs.&lt;/li&gt;
  &lt;li&gt;We couldn¡¯t go on tour but we¡¯re still bringing the best cloud native Java content. Join us as we kick off the #SpringOneTour virtually. &lt;a href="https://t.co/wCZ0gdJtls"&gt;Sign up here for free&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blogs.vmware.com/opensource/2020/05/07/how-the-open-source-community-around-kubernetes-flourished/"&gt;How the Open Source Community Around Kubernetes Flourished&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This is super cool - a Spring Initializr for Alibaba Cloud and Alibab&amp;rsquo;s OSS: &lt;a href="http://start.aliyun.com"&gt;http://start.aliyun.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.codecentric.de/en/2020/05/spring-boot-graalvm/"&gt;Running Spring Boot apps as GraalVM Native Images - codecentric AG Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://t.co/BaLJe0WcHz"&gt;It&amp;rsquo;s the EOL for Spring Security OAuth&lt;/a&gt;. (This refers to the separate standalone project called Spring Security OAuth, &lt;em&gt;not&lt;/em&gt; to the integration for OAuth in Spring Security 5 and later.)&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;&lt;a href="https://t.co/hSB5rBtbry"&gt;A spotlight on Text Blocks by @BrianGoetz. (via @InfoQ)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Getting Started With RSocket: Servers Calling Clients</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/12/getting-started-with-rsocket-servers-calling-clients" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Ben Wilcock</name>
    </author>
    <id>tag:spring.io,2020-05-11:4065</id>
    <updated>2020-05-12T04:30:00Z</updated>
    <content type="html">&lt;p&gt;&lt;strong&gt;Reading Time: about 7 minutes.&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;Coding Time: about 20 minutes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve been following my &lt;a href="https://spring.io/blog/2020/03/02/getting-started-with-rsocket-spring-boot-server"&gt;series&lt;/a&gt; on &lt;a href="https://rsocket.io"&gt;RSocket&lt;/a&gt;, you&amp;rsquo;ve heard me refer to &amp;ldquo;clients and servers&amp;rdquo; many times. But, with RSocket, the line between client and server is &lt;em&gt;blurry&lt;/em&gt;. With Rsocket, servers can send messages to clients, and clients can respond to these requests in the same way a server would.&lt;/p&gt;
&lt;p&gt;In fact, the &lt;a href="http://rsocket.io/docs/Protocol#terminology"&gt;RSocket docs&lt;/a&gt; don&amp;rsquo;t use the terms &amp;lsquo;client&amp;rsquo; or &amp;lsquo;server.&amp;rsquo; The docs use the terms &amp;lsquo;requester&amp;rsquo; and &amp;lsquo;responder&amp;rsquo; instead. In RSocket, any component can act as a requester, and any component can act as a responder or even both at the same time. In RSocket, all this back-and-forth communication between requesters and responders takes place over a single &amp;lsquo;bi-directional&amp;rsquo; connection.&lt;/p&gt;
&lt;p&gt;Today, you&amp;rsquo;re going to take advantage of these features by programming your rsocket-client to respond to requests coming from the server. In the server-side code, you&amp;rsquo;ll listen out for client connection events, and when a connection event happens, you&amp;rsquo;ll store the new client in a list of connected clients. You&amp;rsquo;ll also ask every client to stream telemetry messages back to the server for as long as their connection is alive. &lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;If you&amp;rsquo;ve been following the &lt;a href="https://spring.io/blog/2020/03/02/getting-started-with-rsocket-spring-boot-server"&gt;series&lt;/a&gt;, you can code along by following the directions below. The code is also available to download from &lt;a href="https://github.com/benwilcock/spring-rsocket-demo"&gt;GitHub&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;&lt;h2&gt;&lt;a href="#step-1-update-spring-boot-and-rsocket" class="anchor" name="step-1-update-spring-boot-and-rsocket"&gt;&lt;/a&gt;Step 1: Update Spring Boot and RSocket&lt;/h2&gt;
&lt;p&gt;First, some housekeeping. &lt;a href="https://spring.io/projects/spring-boot"&gt;Spring Boot&lt;/a&gt; and the &lt;a href="https://github.com/rsocket/rsocket-java"&gt;RSocket Java&lt;/a&gt; library were both updated recently. These updates include the usual round of bug fixes, enhancements, and deprecations, so it&amp;rsquo;s in our interest to upgrade. &lt;/p&gt;
&lt;p&gt;Working in the &lt;code&gt;&amp;lt;parent&amp;gt;&lt;/code&gt; section of the Maven &lt;code&gt;pom.xml&lt;/code&gt;, change the &lt;code&gt;spring-boot-starter-parent&lt;/code&gt; to version &lt;code&gt;2.2.7.RELEASE&lt;/code&gt; as shown below. You&amp;rsquo;ll need to do this twice, as you have two separate projects ? &lt;code&gt;rsocket-client&lt;/code&gt; and &lt;code&gt;rsocket-server&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;parent&amp;gt;&#xD;
  &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&#xD;
  &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;version&amp;gt;2.2.7.RELEASE&amp;lt;/version&amp;gt;&#xD;
  &amp;lt;relativePath/&amp;gt; &amp;lt;!-- lookup parent from repository --&amp;gt;&#xD;
&amp;lt;/parent&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To refresh your code, run the following command in the root folder of both projects:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint bash"&gt;./mvnw clean compile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can move on to the coding task.&lt;/p&gt;&lt;h2&gt;&lt;a href="#step-2-add-a-request-response-message-handler-to-the-client" class="anchor" name="step-2-add-a-request-response-message-handler-to-the-client"&gt;&lt;/a&gt;Step 2: Add A Request-Response Message Handler To The Client&lt;/h2&gt;
&lt;p&gt;The client needs to be able to respond to messages coming from the server. In the &lt;code&gt;rsocket-client&lt;/code&gt; project&amp;rsquo;s &lt;code&gt;RSocketShellClient.java&lt;/code&gt;, add a new inner class called &lt;code&gt;ClientHandler&lt;/code&gt; as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@Slf4j&#xD;
class ClientHandler {&#xD;
 &#xD;
 @MessageMapping(&amp;quot;client-status&amp;quot;)&#xD;
 public Flux&amp;lt;String&amp;gt; statusUpdate(String status) {&#xD;
   log.info(&amp;quot;Connection {}&amp;quot;, status);&#xD;
   return Flux.interval(Duration.ofSeconds(5)).map(index -&amp;gt; String.valueOf(Runtime.getRuntime().freeMemory()));&#xD;
 }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This class contains a single method called &lt;code&gt;statusUpdate()&lt;/code&gt; decorated with a &lt;code&gt;@MessageMapping&lt;/code&gt; annotation like the ones in the &lt;code&gt;rsocket-server&lt;/code&gt; project. The client uses this class and this method to capture and respond to requests coming in from the server. The response itself is a stream of messages. Every 5 seconds, the client tells the server its current free memory. Think of this as client telemetry data.&lt;/p&gt;
&lt;p&gt;For this to work, you must &amp;lsquo;register&amp;rsquo; this class with your RSocket connection. You&amp;rsquo;ll do this in the next section.&lt;/p&gt;&lt;h2&gt;&lt;a href="#step-3-register-the-clienthandler-in-the-client-s-constructor" class="anchor" name="step-3-register-the-clienthandler-in-the-client-s-constructor"&gt;&lt;/a&gt;Step 3: Register The ClientHandler In The Client¡¯s Constructor&lt;/h2&gt;
&lt;p&gt;Before the client can respond to messages coming from the server, it must register the &lt;code&gt;ClientHandler&lt;/code&gt; with the RSocket connection. The revised constructor code is listed below. Notice the change to the constructor&amp;rsquo;s method signature to add the &lt;code&gt;RSocketStrategies&lt;/code&gt; variable. Spring supplies this variable to your constructor. Replace your old constructor code, with the new code listed below.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;public RSocketShellClient(RSocketRequester.Builder rsocketRequesterBuilder, RSocketStrategies strategies) {&#xD;
 &#xD;
 // (1)&#xD;
 String client = UUID.randomUUID().toString();&#xD;
 log.info(&amp;quot;Connecting using client ID: {}&amp;quot;, client);&#xD;
  &#xD;
 // (2)&#xD;
 SocketAcceptor responder = RSocketMessageHandler.responder(strategies, new ClientHandler());&#xD;
  &#xD;
 // (3) &#xD;
 this.rsocketRequester = rsocketRequesterBuilder&#xD;
 .setupRoute(&amp;quot;shell-client&amp;quot;)&#xD;
 .setupData(client)&#xD;
 .rsocketStrategies(strategies)&#xD;
 .rsocketConnector(connector -&amp;gt; connector.acceptor(responder))&#xD;
 .connectTcp(&amp;quot;localhost&amp;quot;, 7000)&#xD;
 .block();&#xD;
  &#xD;
 // (4)&#xD;
 this.rsocketRequester.rsocket()&#xD;
 .onClose()&#xD;
 .doOnError(error -&amp;gt; log.warn(&amp;quot;Connection CLOSED&amp;quot;))&#xD;
 .doFinally(consumer -&amp;gt; log.info(&amp;quot;Client DISCONNECTED&amp;quot;))&#xD;
 .subscribe();&#xD;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the code above, you first generate and store a unique ID that identifies this client instance (1). Next, you create a new &lt;code&gt;SocketAcceptor&lt;/code&gt; using the RSocket &lt;code&gt;strategies&lt;/code&gt; plus a new &lt;code&gt;ClientHandler&lt;/code&gt; instance (2). Then use the &lt;code&gt;RSocketRequesterBuilder&lt;/code&gt; to register the new &lt;code&gt;SocketAcceptor&lt;/code&gt; (3). And finally, make sure that disconnection is handled gracefully by handling the RSocket &lt;code&gt;onClose()&lt;/code&gt; events (4). &lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it for the client-side code. Let&amp;rsquo;s move on to the server-side changes.&lt;/p&gt;&lt;h2&gt;&lt;a href="#step-4-remember-clients-on-the-server" class="anchor" name="step-4-remember-clients-on-the-server"&gt;&lt;/a&gt;Step 4: Remember Clients On The Server&lt;/h2&gt;
&lt;p&gt;The first thing to do in the &lt;code&gt;rsocket-server&lt;/code&gt; project is to create a collection of &lt;code&gt;RSocketRequester&lt;/code&gt; clients by adding a class-level variable to the &lt;code&gt;RSocketController.java&lt;/code&gt; class as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;private final List&amp;lt;RSocketRequester&amp;gt; CLIENTS = new ArrayList&amp;lt;&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, add a connection handler by adding a new method like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;  @ConnectMapping(&amp;quot;shell-client&amp;quot;)&#xD;
 void connectShellClientAndAskForTelemetry&#xD;
(RSocketRequester requester, @Payload String client) {&#xD;
 // The code for the method will go HERE&#xD;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;@ConnectMapping&lt;/code&gt; annotation lets you listen to client connection events as they happen. Using this event, you can schedule two pieces of work. The first is to add each new client to the &lt;code&gt;CLIENTS&lt;/code&gt; list. The second is to call out to each client and start their telemetry streams. &lt;/p&gt;
&lt;p&gt;Add the following code to the method you just created:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;requester.rsocket()&#xD;
        .onClose() // (1)&#xD;
        .doFirst(() -&amp;gt; { &#xD;
            log.info(&amp;quot;Client: {} CONNECTED.&amp;quot;, client);&#xD;
            CLIENTS.add(requester); // (2)&#xD;
        })&#xD;
        .doOnError(error -&amp;gt; { &#xD;
            log.warn(&amp;quot;Channel to client {} CLOSED&amp;quot;, client); // (3)&#xD;
        })&#xD;
        .doFinally(consumer -&amp;gt; { &#xD;
            CLIENTS.remove(requester);&#xD;
            log.info(&amp;quot;Client {} DISCONNECTED&amp;quot;, client); // (4)&#xD;
        })&#xD;
        .subscribe();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first thing to notice is the call to the &lt;code&gt;requester.rsocket().onClose()&lt;/code&gt; method (1). This method returns a reactive &lt;code&gt;Mono&lt;/code&gt; object, which contains all the callbacks you need. &lt;/p&gt;
&lt;p&gt;The mono&amp;rsquo;s &lt;code&gt;doFirst()&lt;/code&gt; method gets called &lt;em&gt;before&lt;/em&gt; any calls to &lt;code&gt;subscribe()&lt;/code&gt;, but after the initial creation of the mono. Use this method to add the client&amp;rsquo;s &lt;code&gt;requester&lt;/code&gt; object to the &lt;code&gt;CLIENTS&lt;/code&gt; list (2). &lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;This code might feel counter-intuitive ? calling &lt;code&gt;onClose()&lt;/code&gt; while a client&amp;rsquo;s connecting and then using the resulting mono to store a reference to the new client. Sometimes, event-driven API&amp;rsquo;s can feel a bit odd. But think of it as the mono for this RSocket connection sending you an &amp;ldquo;I&amp;rsquo;m alive&amp;rdquo; event. You&amp;rsquo;re using that creation event to trigger the storage of each client&amp;rsquo;s reference in the list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RSocket calls the mono&amp;rsquo;s &lt;code&gt;doOnError()&lt;/code&gt; method whenever there is a problem with the connection. This includes situations where the client has chosen to close the connection. You can use the &lt;code&gt;error&lt;/code&gt; variable provided to decide what action to take. In the code above, the error simply gets logged as a warning (3).&lt;/p&gt;
&lt;p&gt;The mono&amp;rsquo;s &lt;code&gt;doFinally()&lt;/code&gt; method is triggered when the RSocket connection has closed. This method is the ideal place to run the code that removes the client from the list &lt;code&gt;CLIENTS&lt;/code&gt; (4).&lt;/p&gt;
&lt;p&gt;Finally, &lt;code&gt;subscribe()&lt;/code&gt; activates the reactive code you&amp;rsquo;ve added to the mono and signals that you&amp;rsquo;re ready to process the events.&lt;/p&gt;&lt;h2&gt;&lt;a href="#step-5-ask-for-free-memory-readings-from-clients" class="anchor" name="step-5-ask-for-free-memory-readings-from-clients"&gt;&lt;/a&gt;Step 5: Ask For Free Memory Readings From Clients&lt;/h2&gt;
&lt;p&gt;As each client connects, request a stream of telemetry readings. To do this, working once more in the &lt;code&gt;connectShellClientAndAskForTelemetry()&lt;/code&gt; method, you need to send a request to the &lt;code&gt;client-status&lt;/code&gt; message handler you added earlier. The code for this is as follows: &lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;requester.route(&amp;quot;client-status&amp;quot;)&#xD;
        .data(&amp;quot;OPEN&amp;quot;)&#xD;
        .retrieveFlux(String.class)&#xD;
        .doOnNext(s -&amp;gt; log.info(&amp;quot;Client: {} Free Memory: {}.&amp;quot;,client,s))&#xD;
        .subscribe();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the &lt;code&gt;requester&lt;/code&gt;, target the route &lt;code&gt;&amp;quot;client-status&amp;quot;&lt;/code&gt;. Send the string &lt;code&gt;&amp;quot;OPEN&amp;quot;&lt;/code&gt; as the message data, and retrieve a &lt;code&gt;Flux&lt;/code&gt; of type &lt;code&gt;String&lt;/code&gt;. Each string that arrives contains the client&amp;rsquo;s current free memory reading. Log this reading to the console. Finally, don&amp;rsquo;t forget to &lt;code&gt;subscribe()&lt;/code&gt; to activate your reactive code. &lt;/p&gt;&lt;h2&gt;&lt;a href="#step-6-build-and-run-the-rsocket-server" class="anchor" name="step-6-build-and-run-the-rsocket-server"&gt;&lt;/a&gt;Step 6: Build And Run The RSocket Server&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s time to test your code. Open a terminal window and move to the &lt;code&gt;rsocket-server&lt;/code&gt; directory and run the server as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint bash"&gt;cd rsocket-server&#xD;
./mvnw clean package spring-boot:run -DskipTests=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The server starts up on &lt;code&gt;localhost&lt;/code&gt; port &lt;code&gt;7000&lt;/code&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#step-7-build-and-run-the-rsocket-client" class="anchor" name="step-7-build-and-run-the-rsocket-client"&gt;&lt;/a&gt;Step 7: Build And Run The RSocket Client&lt;/h2&gt;
&lt;p&gt;Open a &lt;em&gt;second&lt;/em&gt; terminal window and move to the &lt;code&gt;rsocket-client&lt;/code&gt; directory. From there, build and run the client as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint bash"&gt;cd rsocket-client&#xD;
./mvnw clean package spring-boot:run -DskipTests=true
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#how-it-works" class="anchor" name="how-it-works"&gt;&lt;/a&gt;How it Works&lt;/h2&gt;
&lt;p&gt;Once booted, you&amp;rsquo;ll notice that both the client and the server components have new log entries in the console. In the &lt;code&gt;rsocket-client&lt;/code&gt; window, you&amp;rsquo;ll see log entries showing the unique ID of the client ? in the form of a UUID ? and an &lt;code&gt;&amp;quot;OPEN&amp;quot;&lt;/code&gt; connection status as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;Connecting using client ID: 0acc1c60-4bc4-444d-bb82-eb6b510f4168&#xD;
Connection OPEN&#xD;
Started RsocketShellClientApplication in 1.516 seconds (JVM running for 1.814)&#xD;
shell:&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Wait at least 10 seconds and then type &lt;code&gt;exit&lt;/code&gt; at the &lt;code&gt;shell:&amp;gt;&lt;/code&gt; prompt. The rsocket-client now disconnects from the server and shuts down.&lt;/p&gt;
&lt;p&gt;Now switch to the &lt;code&gt;rsocket-server&lt;/code&gt; window. The log entries look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint txt"&gt;Started RsocketServerApplication in 0.945 seconds (JVM running for 1.248)&#xD;
Client: 0acc1c60-4bc4-444d-bb82-eb6b510f4168 CONNECTED.&#xD;
Client: 0acc1c60-4bc4-444d-bb82-eb6b510f4168 Free Memory: 211317712.&#xD;
Channel to client 0acc1c60-4bc4-444d-bb82-eb6b510f4168 CLOSED&#xD;
Client 0acc1c60-4bc4-444d-bb82-eb6b510f4168 DISCONNECTED
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As the client connects, it&amp;rsquo;s added to the list of clients, and the console prints its client ID and the status &amp;ldquo;CONNECTED&amp;rdquo;. Then, every 5 seconds, the log shows the client&amp;rsquo;s current &amp;lsquo;free memory&amp;rsquo; reading. Finally, as the client disconnects, it&amp;rsquo;s RSocket channel&amp;rsquo;s status becomes &amp;ldquo;CLOSED&amp;rdquo; and the client is &amp;ldquo;DISCONNECTED.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;You can stop the &lt;code&gt;rsocket-server&lt;/code&gt; process by pressing &lt;code&gt;Ctrl-C&lt;/code&gt; in its terminal window.&lt;/p&gt;&lt;h2&gt;&lt;a href="#final-thoughts" class="anchor" name="final-thoughts"&gt;&lt;/a&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;The ability to call out to clients in is very powerful. It¡¯s ideal for all kinds of scenarios, including mobile, internet-of-things, or microservices. And because all this can happen over TCP or WebSockets, you already have all the infrastructure you need without resorting to heavyweight solutions like message brokers. &lt;/p&gt;
&lt;p&gt;You covered a lot of ground here. You learned how to turn servers into &amp;lsquo;requesters&amp;rsquo; and clients into &amp;lsquo;responders.&amp;rsquo; You discovered how to listen into connection events. You also learned a little bit about how to handle errors and events coming from rsocket connections. And, although in this exercise, you chose &amp;lsquo;request-stream&amp;rsquo; as your server-client communication, you could use any of the four RSocket interaction modes, depending on your needs. &lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Task 2.3.0-M1 is now available!</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/11/spring-cloud-task-2-3-0-m1-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Michael Minella</name>
    </author>
    <id>tag:spring.io,2020-05-11:4067</id>
    <updated>2020-05-11T22:26:52Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Cloud Task 2.3.0-M1 is now available on Github and the Spring download repository. Many thanks to all of those who contributed to this release.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new" class="anchor" name="what-rsquo-s-new"&gt;&lt;/a&gt;What&amp;rsquo;s New?&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task 2.3.0-M1 is intended to be the version of the framework aligned with Spring Boot 2.3. Updates from 2.2.x include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Updates to all dependencies.&lt;/li&gt;
  &lt;li&gt;Support for specifying a &lt;code&gt;PlatformTransactionManager&lt;/code&gt; to be used by Spring Cloud Task.&lt;/li&gt;
  &lt;li&gt;A starter for singl-step Spring Batch jobs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s walk through these updates in more detail.&lt;/p&gt;&lt;h2&gt;&lt;a href="#update-to-all-dependencies" class="anchor" name="update-to-all-dependencies"&gt;&lt;/a&gt;Update to All Dependencies&lt;/h2&gt;
&lt;p&gt;As stated earlier, this is first milestone release that brings Spring Cloud Task into alignment with Spring Boot 2.3. This includes updating all dependencies to be in alignment with Spring Boot and Spring Cloud.&lt;/p&gt;&lt;h2&gt;&lt;a href="#support-for-specifying-a-code-platformtransactionmanager-code-to-be-used-by-spring-cloud-task" class="anchor" name="support-for-specifying-a-code-platformtransactionmanager-code-to-be-used-by-spring-cloud-task"&gt;&lt;/a&gt;Support for specifying a &lt;code&gt;PlatformTransactionManager&lt;/code&gt; to be used by Spring Cloud Task&lt;/h2&gt;
&lt;p&gt;When using more than one &lt;code&gt;DataSource&lt;/code&gt;, Spring Cloud Task provides the ability to specify which &lt;code&gt;DataSource&lt;/code&gt; is to be used by the framework&amp;rsquo;s &lt;code&gt;TaskRepository&lt;/code&gt;. However, previously, there was no easy way to configure which &lt;code&gt;PlatformTransactionManager&lt;/code&gt; to use. This release now exposes updates to allow specific configuration of a &lt;code&gt;PlatformTransactionManager&lt;/code&gt; for the framework to use.&lt;/p&gt;&lt;h2&gt;&lt;a href="#starter-for-single-step-batch-jobs" class="anchor" name="starter-for-single-step-batch-jobs"&gt;&lt;/a&gt;Starter for Single-step Batch Jobs&lt;/h2&gt;
&lt;p&gt;One area where we are expanding Spring Cloud Task&amp;rsquo;s functionality for 2.3 is the addition of a starter that will let users configure a single-step Spring Batch job through properties alone. This release includes the capabilities to configure a job through properties that can read and write from a flat file through properties. Let&amp;rsquo;s take a look at an example of how this would work.&lt;/p&gt;
&lt;p&gt;To use this starter, first add it to your Spring Boot based project as a dependency, as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;...&#xD;
&amp;lt;dependency&amp;gt;&#xD;
	&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
	&amp;lt;artifactId&amp;gt;spring-cloud-starter-single-step-batch-job&amp;lt;/artifactId&amp;gt;&#xD;
	&amp;lt;version&amp;gt;2.3.0-M1&amp;lt;/version&amp;gt;&#xD;
&amp;lt;/dependency&amp;gt;&#xD;
...&#xD;
&amp;lt;repository&amp;gt;&#xD;
	&amp;lt;id&amp;gt;Spring Milestone&amp;lt;/id&amp;gt;&#xD;
	&amp;lt;url&amp;gt;https://repo.spring.io/lib-milestones-local/&amp;lt;/url&amp;gt;&#xD;
&amp;lt;/repository&amp;gt;&#xD;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;...&#xD;
maven { url &amp;#39;https://repo.spring.io/lib-milestones-local/&amp;#39; }&#xD;
...&#xD;
compile &amp;quot;org.springframework.cloud:spring-cloud-starter-single-step-batch-job:2.3.0-M1&amp;quot;&#xD;
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the starter added to your project (assuming you&amp;rsquo;ve already created the Spring Boot main class with the &lt;code&gt;@EnableBatchProcessing&lt;/code&gt; annotation on it), the only other work you need to do is to configure your job. Say you have the following input file:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;customer1,100&#xD;
customer2,101&#xD;
customer3,102&#xD;
customer4,103&#xD;
customer5,104&#xD;
customer6,105&#xD;
customer7,106&#xD;
customer8,107&#xD;
customer9,108
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above input file, the first column in the CSV is a customer name, and the second column is the balance. If we wanted to configure a job to read in the file and reformat it by reversing the columns, we would create an &lt;code&gt;application.yml&lt;/code&gt;, as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;spring:&#xD;
  batch:&#xD;
      job:&#xD;
        jobName: sample&#xD;
        stepName: step1&#xD;
        chunkSize: 5&#xD;
        flatfilereader:&#xD;
          delimited: true&#xD;
          names: customer,number&#xD;
          name: itemReader&#xD;
          resource: /input.csv&#xD;
        flatfilewriter:&#xD;
          formatted: true&#xD;
          format: &amp;quot;%s has a balance of %s&amp;quot;&#xD;
          name: itemWriter&#xD;
          names: customer,number&#xD;
          resource: file:///tmp/output.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are familiar with Spring Batch, this configuration should look familiar to you. We begin by defining the name of the job and the name of the step within it. We also provide a chunk size to indicate how many records per transaction to process. From there, we configure an &lt;code&gt;ItemReader&lt;/code&gt; and &lt;code&gt;ItemWriter&lt;/code&gt; (&lt;code&gt;FlatFileItemReader&lt;/code&gt; and &lt;code&gt;FlatFileItemWriter&lt;/code&gt;, respectively) for our step to use. If we want, we can also implement an &lt;code&gt;ItemProcessor&lt;/code&gt;, and the starter will autowire it into our step.&lt;/p&gt;
&lt;p&gt;With the above configured, our batch job will read our file in and write it out in the requested format. The output from the sample file above would look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;customer1 has a balance of 100&#xD;
customer2 has a balance of 101&#xD;
customer3 has a balance of 102&#xD;
customer4 has a balance of 103&#xD;
customer5 has a balance of 104&#xD;
customer6 has a balance of 105&#xD;
customer7 has a balance of 106&#xD;
customer8 has a balance of 107&#xD;
customer9 has a balance of 108
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This milestone includes auto-configuration for the &lt;code&gt;FlatFileItemReader&lt;/code&gt; and &lt;code&gt;FlatFileItemWriter&lt;/code&gt;. For our GA release (scheduled later this year), we expect to have the following all available as auto-configured options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;FlatFileItemReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;FlatFileItemWriter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;JdbcPagingItemReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;JdbcCursorItemReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;JdbcBatchItemWriter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;KafkaItemReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;KafkaItemWriter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AmqpItemReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AmqpItemWriter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If there are others you feel should be on the list, be sure to let us know on Github!&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-do-you-think" class="anchor" name="what-do-you-think"&gt;&lt;/a&gt;What Do You Think?&lt;/h2&gt;
&lt;p&gt;We look forward to your feedback on these new features in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-task"&gt;StackOverflow&lt;/a&gt;, &lt;a href="https://gitter.im/spring-cloud/spring-cloud-task"&gt;Gitter&lt;/a&gt;, or directly on Twitter &lt;a href="https://twitter.com/michaelminella"&gt;@michaelminella&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task Home&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-task"&gt;Source on GitHub&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-cloud-task/docs/2.3.0-M1/reference/htmlsingle/"&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security OAuth2 Auto-config 2.3.0.RC1, 2.2.7, 2.1.14 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/11/spring-security-oauth2-auto-config-2-3-0-rc1-2-2-7-2-1-14-released" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2020-05-11:4066</id>
    <updated>2020-05-11T18:57:08Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring Security OAuth2 Auto-config 2.3.0.RC1 (&lt;a href="https://github.com/spring-projects/spring-security-oauth2-boot/releases/tag/2.3.0.RC1"&gt;release notes&lt;/a&gt;), 2.2.7.RELEASE (&lt;a href="https://github.com/spring-projects/spring-security-oauth2-boot/releases/tag/2.2.7.RELEASE"&gt;release notes&lt;/a&gt;), 2.1.14.RELEASE (&lt;a href="https://github.com/spring-projects/spring-security-oauth2-boot/releases/tag/2.1.14.RELEASE"&gt;release notes&lt;/a&gt;). The release delivers dependency updates to be compatible with the last versions of Spring Boot. Users are encouraged to update to the latest patch release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Spring and Java community member Edd? Mel?ndez on his journey to contributing to Spring</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/a-bootiful-podcast-spring-and-java-community-member-edd-mel-ndez-on-his-journey-to-contributing-to-spring" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2020-05-08:4064</id>
    <updated>2020-05-07T23:30:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! This week I rant about push-button simple deployments and then talk to our friend and Spring and Java community member Edd? Mel?ndez about working in open-source, his journey to Spring and its community, his various contributions to Spring and more.&lt;br/&gt;&lt;!-- A Bootiful Podcast: Spring and Java community member Edd? Mel?ndez about working in open-source, his journey to Spring and its community, contributing to Spring and more.--&gt;&lt;/p&gt;
&lt;iframe title="Spring and Java community member Edd? Mel?ndez about working in open-source, his journey to Spring and its community, contributing to Spring and more." src="https://www.podbean.com/media/player/cr5hw-dbb6ff?from=usersite&amp;vjs=1&amp;skin=1&amp;fonts=Helvetica&amp;auto=0&amp;download=1" height="315" width="100%" style="border: none;" scrolling="no" data-name="pb-iframe-player"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Tanzu Observability by Wavefront Spring Boot Starter</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/tanzu-observability-by-wavefront-spring-boot-starter" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2020-05-07:4060</id>
    <updated>2020-05-07T17:54:00Z</updated>
    <content type="html">&lt;p&gt;Spring Boot has a great observability story. With the Actuator, we auto-configure &lt;a href="http://micrometer.io/"&gt;Micrometer&lt;/a&gt;, an application metrics facade that supports numerous monitoring systems. With a few properties, you can start emitting a wide range of metrics out-of-the-box to your favorite monitoring system. And if you need to use distributed tracing, &lt;a href="https://spring.io/projects/spring-cloud-sleuth"&gt;Spring Cloud Sleuth&lt;/a&gt; gets you covered.&lt;/p&gt;
&lt;p&gt;Tanzu Observability for Wavefront (formerly Wavefront) delivers scalable observability as a service where Spring developers can build analytics-driven dashboards based on multi-sourced data including metrics, traces, histograms, and span logs. &lt;/p&gt;
&lt;p&gt;The Spring team has been working side-by-side with the Tanzu Observability team on &lt;a href="https://github.com/wavefrontHQ/wavefront-spring-boot"&gt;a starter&lt;/a&gt; for a quick and easy way to get started. The starter also auto-provisions a free, Tanzu Observability account if you don¡¯t already have one . The Tanzu blog has &lt;a href="https://tanzu.vmware.com/content/blog/byo-spring-boot-apps-tanzu-observability-for-free-no-sign-up-needed"&gt;an introduction to using Wavefront with Spring&lt;/a&gt; and a &lt;a href="https://tanzu.vmware.com/content/practitioners-blog/zero-cost-no-sign-up-introducing-tanzu-observability-for-spring-boot-applications"&gt;technical deep-dive&lt;/a&gt;. You can also check out the &lt;a href="https://docs.wavefront.com/wavefront_springboot.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://static.spring.io/blog/snicoll/20200507/wavefront.png" alt="Wavefront Dashboard" title="Wavefront Dashboard" /&gt;&lt;/p&gt;
&lt;p&gt;You can try out this platform by creating a new project on &lt;a href="https://start.spring.io"&gt;https://start.spring.io&lt;/a&gt;: select your favorite build tool, Spring Boot 2.3 and add at least the wavefront entry. You may want to select a web stack although this is not mandatory in any way.&lt;/p&gt;
&lt;p&gt;Before starting the application, we want to make sure to identify its data later in the Tanzu Observability dashboard. Open &lt;code&gt;application.properties&lt;/code&gt; and add the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint properties"&gt;wavefront.application.name=my-demo&#xD;
wavefront.application.service=test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you start such an app for the first time, you should see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;A Wavefront account has been provisioned successfully and the API token has been saved to disk.&#xD;
&#xD;
To share this account, make sure the following is added to your configuration:&#xD;
&#xD;
	management.metrics.export.wavefront.api-token=xxxx-xxxx-xxxx-xxxx&#xD;
	management.metrics.export.wavefront.uri=https://wavefront.surf&#xD;
&#xD;
Connect to your Wavefront instance using this one-time use link:&#xD;
https://wavefront.surf/us/example
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An account has been auto-provisioned for you and the necessary configuration has been provided to the auto-configuration in your project. Your new api token has been saved in your home directory and will be reused automatically for any app that¡¯s started on the same machine and user.&lt;/p&gt;
&lt;p&gt;The single-use login URL is provided every time you start the application. If you don¡¯t have access to the logs of your web application, you can expose the wavefront Actuator endpoint and head over &lt;code&gt;/actuator/wavefront&lt;/code&gt; and you¡¯ll be redirected to your Wavefront dashboard.&lt;/p&gt;
&lt;p&gt;If you are interested in testing distributed tracing, adding Spring Cloud Sleuth (also available from start.spring.io) lets you emit traces automatically to Wavefront. You can find these in &lt;code&gt;Application &amp;gt; Traces&lt;/code&gt; in your Wavefront dashboard. The Tanzu Observability platform supports other flavors of distributed tracing as well. To learn more about it, check out the &lt;a href="https://docs.wavefront.com/tracing_basics.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Wavefront Spring Boot starter is in the release candidate phase and we¡¯d love to hear from you. Head over &lt;a href="https://start.spring.io"&gt;https://start.spring.io&lt;/a&gt;, create a new project with Wavefront and Spring Boot 2.3 and &lt;a href="https://github.com/wavefrontHQ/wavefront-spring-boot/issues"&gt;let us know&lt;/a&gt; if you find any problem.&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 5.4.0-M1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/spring-security-5-4-0-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Eleftheria Stein-Kousathana</name>
    </author>
    <id>tag:spring.io,2020-05-07:4061</id>
    <updated>2020-05-07T17:02:26Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I¡¯m pleased to announce the release of
Spring Security 5.4.0-M1! You can find the complete details in the &lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.4.0-M1"&gt;release notes&lt;/a&gt; and the highlights below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="oauth-2-0"&gt;&lt;a class="anchor" href="#oauth-2-0"&gt;&lt;/a&gt;OAuth 2.0&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8185-resource-server-configurers-pick-up-a-jwtauthenticationconverter-bean"&gt;&lt;a class="anchor" href="#gh-8185-resource-server-configurers-pick-up-a-jwtauthenticationconverter-bean"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8185"&gt;gh-8185&lt;/a&gt; - Resource Server configurers pick up a JwtAuthenticationConverter bean&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8324-configure-authoritiesmapper-in-reactive-oauth2login"&gt;&lt;a class="anchor" href="#gh-8324-configure-authoritiesmapper-in-reactive-oauth2login"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8324"&gt;gh-8324&lt;/a&gt; - Configure AuthoritiesMapper in Reactive OAuth2Login&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8324-validate-id-token-issuer"&gt;&lt;a class="anchor" href="#gh-8324-validate-id-token-issuer"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8321"&gt;gh-8324&lt;/a&gt; - Validate ID Token Issuer&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8337-allow-custom-header-during-bearer-token-extraction"&gt;&lt;a class="anchor" href="#gh-8337-allow-custom-header-during-bearer-token-extraction"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8337"&gt;gh-8337&lt;/a&gt; - Allow custom header during bearer token extraction&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8332-provide-possibility-to-use-custom-cache-to-store-jwk-set"&gt;&lt;a class="anchor" href="#gh-8332-provide-possibility-to-use-custom-cache-to-store-jwk-set"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/pull/8332"&gt;gh-8332&lt;/a&gt; - Provide possibility to use custom cache to store JWK Set&lt;/h5&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="web"&gt;&lt;a class="anchor" href="#web"&gt;&lt;/a&gt;Web&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8033-add-server-request-cache-that-uses-cookie"&gt;&lt;a class="anchor" href="#gh-8033-add-server-request-cache-that-uses-cookie"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8033"&gt;gh-8033&lt;/a&gt; - Add server request cache that uses cookie&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-2693-transfer-sessions-max-inactive-interval-in-sessionfixationprotectionstrategy"&gt;&lt;a class="anchor" href="#gh-2693-transfer-sessions-max-inactive-interval-in-sessionfixationprotectionstrategy"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/2693"&gt;gh-2693&lt;/a&gt; - Transfer session&amp;#8217;s max inactive interval in SessionFixationProtectionStrategy&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-4183-switchuserfilter-vulnerable-to-csrf"&gt;&lt;a class="anchor" href="#gh-4183-switchuserfilter-vulnerable-to-csrf"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/4183"&gt;gh-4183&lt;/a&gt; - SwitchUserFilter vulnerable to CSRF&lt;/h5&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="docs"&gt;&lt;a class="anchor" href="#docs"&gt;&lt;/a&gt;Docs&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8391-documented-dependencies-for-opaque-resource-server"&gt;&lt;a class="anchor" href="#gh-8391-documented-dependencies-for-opaque-resource-server"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8391"&gt;gh-8391&lt;/a&gt; - Documented dependencies for opaque Resource Server&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8182-add-figures-to-resource-server-docs"&gt;&lt;a class="anchor" href="#gh-8182-add-figures-to-resource-server-docs"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8182"&gt;gh-8182&lt;/a&gt; - Add Figures to Resource Server Docs&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8110-gh-8077-and-gh-8074-document-oauth-2-0-xml-support"&gt;&lt;a class="anchor" href="#gh-8110-gh-8077-and-gh-8074-document-oauth-2-0-xml-support"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8110"&gt;gh-8110&lt;/a&gt;, &lt;a href="https://github.com/spring-projects/spring-security/issues/8077"&gt;gh-8077&lt;/a&gt; and &lt;a href="https://github.com/spring-projects/spring-security/issues/8074"&gt;gh-8074&lt;/a&gt; - Document OAuth 2.0 XML support&lt;/h5&gt;

&lt;/div&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8050-add-oauth-2-0-test-support-docs"&gt;&lt;a class="anchor" href="#gh-8050-add-oauth-2-0-test-support-docs"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8050"&gt;gh-8050&lt;/a&gt; - Add OAuth 2.0 Test Support Docs&lt;/h5&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="kotlin"&gt;&lt;a class="anchor" href="#kotlin"&gt;&lt;/a&gt;Kotlin&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-5558-idiomatic-kotlin-dsl-for-configuring-http-security"&gt;&lt;a class="anchor" href="#gh-5558-idiomatic-kotlin-dsl-for-configuring-http-security"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/5558"&gt;gh-5558&lt;/a&gt; - Idiomatic Kotlin DSL for configuring HTTP security&lt;/h5&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="crypto"&gt;&lt;a class="anchor" href="#crypto"&gt;&lt;/a&gt;Crypto&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8402-allow-creating-aesbytesencryptor-with-key"&gt;&lt;a class="anchor" href="#gh-8402-allow-creating-aesbytesencryptor-with-key"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8402"&gt;gh-8402&lt;/a&gt; - Allow creating AesBytesEncryptor with key&lt;/h5&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="ldap"&gt;&lt;a class="anchor" href="#ldap"&gt;&lt;/a&gt;LDAP&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8393-flag-to-enable-searching-of-ldap-groups-on-subtrees"&gt;&lt;a class="anchor" href="#gh-8393-flag-to-enable-searching-of-ldap-groups-on-subtrees"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8393"&gt;gh-8393&lt;/a&gt; - Flag to enable searching of LDAP groups on subtrees&lt;/h5&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="saml"&gt;&lt;a class="anchor" href="#saml"&gt;&lt;/a&gt;SAML&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect4"&gt;
&lt;h5 id="gh-8356-saml2authenticationrequestcontext-should-be-extendible"&gt;&lt;a class="anchor" href="#gh-8356-saml2authenticationrequestcontext-should-be-extendible"&gt;&lt;/a&gt;&lt;a href="https://github.com/spring-projects/spring-security/issues/8356"&gt;gh-8356&lt;/a&gt; - Saml2AuthenticationRequestContext should be extendible&lt;/h5&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; |
&lt;a href="https://docs.spring.io/spring-security/site/docs/5.4.0-M1/reference/html5/"&gt;Reference&lt;/a&gt;
| &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.2.7 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/spring-boot-2-2-7-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2020-05-07:4062</id>
    <updated>2020-05-07T16:31:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot 2.2.7 has been released and is now available from &lt;a href="https://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.2.7.RELEASE"&gt;80 bug fixes, enhancements, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#important-security-advisory" class="anchor" name="important-security-advisory"&gt;&lt;/a&gt;Important Security Advisory&lt;/h3&gt;
&lt;p&gt;This version of Spring Boot includes a dependency upgrade to Spring Security &lt;code&gt;5.2.4.RELEASE&lt;/code&gt;. It contains fixes for &lt;a href="https://tanzu.vmware.com/security/cve-2020-5407"&gt;CVE-2020-5407&lt;/a&gt; and &lt;a href="https://tanzu.vmware.com/security/cve-2020-5408"&gt;CVE-2020-5408&lt;/a&gt;, see also &lt;a href="https://spring.io/blog/2020/05/13/cve-reports-published-for-spring-security"&gt;the official announcement&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/2.2.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.1.14 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/spring-boot-2-1-14-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2020-05-07:4063</id>
    <updated>2020-05-07T16:08:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot 2.1.14 has been released and is now available from &lt;a href="https://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.1.14.RELEASE"&gt;61 bug fixes, enhancements, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#important-security-advisory" class="anchor" name="important-security-advisory"&gt;&lt;/a&gt;Important Security Advisory&lt;/h3&gt;
&lt;p&gt;This version of Spring Boot includes a dependency upgrade to Spring Security &lt;code&gt;5.1.10.RELEASE&lt;/code&gt;. It contains fixes for &lt;a href="https://tanzu.vmware.com/security/cve-2020-5407"&gt;CVE-2020-5407&lt;/a&gt; and &lt;a href="https://tanzu.vmware.com/security/cve-2020-5408"&gt;CVE-2020-5408&lt;/a&gt;, see also &lt;a href="https://spring.io/blog/2020/05/13/cve-reports-published-for-spring-security"&gt;the official announcement&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/2.1.14.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 5.3.2, 5.2.4, 5.1.10, 5.0.16, 4.2.16 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/spring-security-5-3-2-5-2-4-5-1-10-5-0-16-4-2-16-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2020-05-06:4056</id>
    <updated>2020-05-07T12:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2020-05-13:&lt;/strong&gt; The following versions of Spring Security address &lt;a href="https://spring.io/blog/2020/05/13/cve-reports-published-for-spring-security"&gt;CVE-2020-5407 and CVE-2020-5408&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring Security 5.3.2 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE"&gt;release notes&lt;/a&gt;),  5.2.4 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE"&gt;release notes&lt;/a&gt;), 5.1.10 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.1.10.RELEASE"&gt;release notes&lt;/a&gt;) , 5.0.16 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.0.16.RELEASE"&gt;release notes&lt;/a&gt;), 4.2.16 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/4.2.16.RELEASE"&gt;release notes&lt;/a&gt;). These releases deliver bug fixes along with some minor improvements. Users are encouraged to update to the latest patch release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/current/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring LDAP 2.3.3 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/spring-ldap-2-3-3-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2020-05-06:4057</id>
    <updated>2020-05-07T12:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring LDAP 2.3.3 (&lt;a href="https://github.com/spring-projects/spring-ldap/releases/tag/2.3.RELEASE"&gt;release notes&lt;/a&gt;). The release delivers bug fixes along with some minor improvements. Users are encouraged to update to the latest patch release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-ldap/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-ldap/site/docs/current/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>End-of-Life for Spring Security OAuth</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/07/end-of-life-for-spring-security-oauth" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Joe Grandja</name>
    </author>
    <id>tag:spring.io,2020-05-05:4054</id>
    <updated>2020-05-07T11:47:33Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;In January 2018, we &lt;a href="https://spring.io/blog/2018/01/30/next-generation-oauth-2-0-support-with-spring-security"&gt;announced&lt;/a&gt; that the &lt;a href="https://spring.io/projects/spring-security-oauth"&gt;Spring Security OAuth&lt;/a&gt; (legacy) project is officially in maintenance mode. Later in November of 2019, we provided an update in the &lt;a href="https://spring.io/blog/2019/11/14/spring-security-oauth-2-0-roadmap-update"&gt;Spring Security OAuth 2.0 Roadmap&lt;/a&gt;, stating that the 2.3.x line will reach end-of-life in March 2020.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The currently supported version branches are 2.4.x and 2.5.x, with the 2.5.0 release scheduled for May 2020, which will be &lt;strong&gt;the final minor release&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To that end, the plan is to provide patch and security fixes for the 2.4.x and 2.5.x line until May 2021. Additionally, security fixes will be supported for the 2.5.x line until May 2022, at which point the project will have reached end-of-life. The same end-of-life timeline applies to the &lt;a href="https://github.com/spring-projects/spring-security-oauth2-boot"&gt;Spring Boot 2 auto-configuration project&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Finally, in May 2022, we intend to ¡°open¡± up the project, so that it can be directly managed by the member(s) in the community.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Season 7 Recap</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/06/spring-tips-season-7-recap" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2020-05-06:4059</id>
    <updated>2020-05-06T23:40:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to the recap installment for the seventh season of &lt;em&gt;Spring Tips&lt;/em&gt;! I can&amp;rsquo;t believe we&amp;rsquo;re already on season seven! In October of 2020, it&amp;rsquo;ll be 4 straight years of doing these videos. Hopefully, they&amp;rsquo;re helping.&lt;/p&gt;
&lt;p&gt;Every season consists of 11 episodes and one recap blog post. Sometimes, I&amp;rsquo;ll do an occasional extra episode or I&amp;rsquo;ll do an episode during the interregnum between seasons as the situations sometimes demand. But, for now, I&amp;rsquo;m done for a little while - not as long as last time, for sure! But a little while. I need time to gather my resources, prepare new content, finish the &lt;a href="http://ReactiveSpring.io"&gt;Reactive Spring book&lt;/a&gt;, and produce those new episodes. &lt;/p&gt;
&lt;p&gt;This is where &lt;em&gt;you&lt;/em&gt; come in, dear reader: what would you like to see in the latest episodes? &lt;a href="http://twitter.com/Starbuxman"&gt;What content would you like me to introduce? Sound off on Twitter (@starbuxman) to me personally&lt;/a&gt; or to the &lt;a href="http://twitter.com/SpringTipsLive"&gt;@SpringTipsLive account&lt;/a&gt; or &lt;a href="mailto:josh@joshlong.com"&gt;by email (josh@joshlong.com)&lt;/a&gt;. I&amp;rsquo;d love to hear from you! Your contributions and ideas are a huge inspiration to me - indeed I do most of the work because of you, the most amazing community on earth Thank you for everything. Thank you for your ideas which help to keep things interesting.&lt;/p&gt;
&lt;p&gt;I want things to be interesting! I &lt;em&gt;try&lt;/em&gt; to mix things up every now and then. Every season tries to introduce some combination of the following categories of video:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;CONCEPTUAL FUNDAMENTALS&lt;/em&gt;: things that are common to lots of Spring developers (like Java 14, or configuration, or testing reactive applications, or the Kotlin programming language). These videos tend to look at how a theme applies across a number of portfolio projects.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;PROJECT-SPECIFIC INTRODUCTIONS&lt;/em&gt;: I like to introduce projects - projects that people may or may not have heard of - like &lt;em&gt;Spring Cloud Data Flow&lt;/em&gt; or &lt;em&gt;Spring Batch&lt;/em&gt; or &lt;em&gt;Spring Cloud for Alibaba&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;INTEGRATIONS&lt;/em&gt;: I love to introduce integrations for various projects. These are some of my favorite videos to make. I think of them sort of like the Avengers: team-ups make things even more exciting and feasible. These videos look at third party projects that, while they exist independent of the Spring ecosystem, they also happen to work really well with Spring. Examples in this vein include &lt;em&gt;MyBatis&lt;/em&gt; (as a way to map SQL queries to repository methods), &lt;em&gt;JOOQ&lt;/em&gt; (as another way to do SQL-centric queries), &lt;em&gt;Apache Camel&lt;/em&gt; (as another way to support enterprise integration patterns), &lt;em&gt;Flowable&lt;/em&gt; (as another way to do business process management), etc.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;SPECIFIC FEATURES&lt;/em&gt;: I like to look at individual features in a larger umbrella project or theme. I&amp;rsquo;ve done this many times looking at individual features of Spring Boot, Spring Cloud, reactive programming, etc. While I may have done an introduction video to some of these, no video could hope to capture every new feature. So, I do followup videos that dive deeper into some specific features. I did this when looking at distributed locks with &lt;em&gt;Spring Integration&lt;/em&gt;, or coroutines with Spring, &lt;em&gt;Reactor&lt;/em&gt; and &lt;em&gt;Kotlin&lt;/em&gt;, for example.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;NEW AND NOVEL&lt;/em&gt;: I enjoy bringing you information about the new and nice stuff coming from the Spring team and beyond. We saw some of these kinds of videos when we looked at the Spring Graal feature, functional bean registration, functional reactive endpoints, and Spring Cloud Gateway. These videos were all done against milestones or snapshots - I live on the cutting edge so you don&amp;rsquo;t have to! Sometimes my videos end up being obviated by some newer developments, but that&amp;rsquo;s OK - at least you know what&amp;rsquo;s coming and are ready to use them when these projects do finally land.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This season had a little of all of those categories! Also, this season, I tried - wherever possible - to do shorter videos. There are some one-hour-ish long videos in this season, to be sure, but that&amp;rsquo;s because they&amp;rsquo;re more broad in scope. One example that leaps to mind is the one on Configuration.&lt;/p&gt;
&lt;p&gt;So, here is a list of every video in the Spring Tips series &lt;em&gt;so far&lt;/em&gt;. The first 11 entries are the most recent, from season seven. Enjoy! In the meantime, if you&amp;rsquo;ve binge-watched all these videos, and you still want your fill, check out my weekly roundup of the wonderful and wild world of Springdom - &lt;em&gt;This Week in Spring&lt;/em&gt; - every Tuesday on &lt;a href="http://spring.io/blog"&gt;the Spring blog&lt;/a&gt;. Or, check out my podcast, &lt;a href="http://BootifulPodcast.fm"&gt;&lt;em&gt;A Bootiful Podcast&lt;/em&gt; (@BootifulPodcast)&lt;/a&gt;, with new episodes every Friday available for listening on your favorite podcatcher. &lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=R8RAgTJvbEc"&gt;(2020-04-29) Wavefront&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PsNNGuLi0ns"&gt;(2020-04-23) Configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=u1XJTI1PVLw"&gt;(2020-04-16) Spring Graal Feature&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1llAwgOKjTY"&gt;(2020-04-07) The Spring Integration Kotlin DSL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Hu5DzNogV0E"&gt;(2020-04-01) The Spring Cloud Cloud Foundry Java Autoconfiguration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FDeOoKRKgkM"&gt;(2020-03-25) Spring Cloud Loadbalancer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PkWiinQCPxQ"&gt;(2020-03-18) Remote File System Integrations with Spring Integration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mr-7kGy8Yao"&gt;(2020-03-11) Java 14: Can Your Java Do This?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=V1ce8RdTdo0"&gt;(2020-03-04) Kotlin and Spring Security&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vwHk8HVQAJE"&gt;(2020-02-26) Apache RocketMQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ER-mbWp2xYg"&gt;(2020-02-18) RSocket and Spring Security&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=firwCHbC7-c"&gt;(2019-06-19) Distributed Locks with Spring Integration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3xu5xttCrVk"&gt;(2019-06-12) Spring&amp;rsquo;s Support for Kotlin Coroutines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=D33awJnlhWg"&gt;(2019-06-05) Organizational Consistency in your Spring Boot Applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0oI_-xBhAK8"&gt;(2019-05-29) Debuggng Reactive Transactions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9henAE6VUbk"&gt;(2019-05-22) Reactive Transactions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UJesCn731G4"&gt;(2019-05-15) Spring Batch and Apache Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ewpJ9EUAz5s"&gt;(2019-05-08) Reactive Web Views&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=s5-leUCti5o"&gt;(2019-04-24) Spring Cloud Circuit Breaker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BxHqeq58xrE"&gt;(2019-04-15) RSocket Messaging in Spring Boot 2.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vZV2_9KVHJU"&gt;(2019-04-03) Webmvc.fn - the Functional DSL for Spring MVC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DvO4zLVDkMs"&gt;(2019-03-20) Reactive MySQL Support with JAsync SQL and R2DBC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_m4xpHUf55E"&gt;(2019-03-14) Be Lazy and Fast with Spring Boot 2.2.M1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dmBMs-mubHA"&gt;(2019-02-13) Apache Geode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RPmTXiw-dHA"&gt;(2019-02-06) Testing Reactive Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5tlZddM5Jo0"&gt;(2019-01-30) The Reactor Context&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SLG8gUGvdx4"&gt;(2019-01-23) Reactively Hedging Client Requests with a Service Registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lPy9mc_O_gU"&gt;(2019-01-16) JavaFX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=43_OLrxU3so"&gt;(2019-01-09) Flowable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GDIDSzZLjjg"&gt;(2019-01-02) RSocket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B60y65wexgI"&gt;(2018-12-26) Alibaba&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fIMdlE5Hvzk"&gt;(2018-12-19) Reactive SQL Data Access with Spring Data R2DBC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=j-QYp8eYRe8"&gt;(2018-12-12) Google Cloud Platform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jRgZe7kWDnU"&gt;(2018-12-05) Microsoft Azure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-yJ53wzG_lg"&gt;(2018-06-13) Spring Fu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2E8_0Qxi6Tg"&gt;(2018-06-06) JPA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TUOwlaqZ0eo"&gt;(2018-05-30) JDBC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-KupcZ3bA-Y"&gt;(2018-05-23) Apache Camel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E55oAtOhWZU"&gt;(2018-05-16) Project Riff and Spring Cloud Function &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gSUeGi4sLlA"&gt;(2018-05-09) Spring Security 5 OAuth Clients&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JAdxO1XboJY"&gt;(2018-05-02) Metrics Collection in Spring Boot 2 with Micrometer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=M4Aa45Gpc4w"&gt;(2018-04-25) Spring Statemachine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_M8xoagybzU"&gt;(2018-04-18) Redis &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EtxD_RzKSwk"&gt;(2018-04-11) The Cloud Foundry Java Client&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YPDzcmqwCNo"&gt;(2018-04-04) Spring Cloud Stream Kafka Streams&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nh2seTeGw5A"&gt;(2017-12-15) Bootiful Banners&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=m-AOu6vzJMQ"&gt;(2017-12-04) Spring Tool Suite 4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TwVtlNX-2Hs"&gt;(2017-11-29) Spring Cloud Gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lTSJCr7xdbM"&gt;(2017-11-22) Bootiful Testing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=arOqTOEtAVA"&gt;(2017-11-15) Spring Boot Build Plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P3yI_YhG5pk"&gt;(2017-11-08) Bootiful Kotlin Redux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=h6nMjjxJWjk"&gt;(2017-11-01) Spring Shell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ki54FB2B25U"&gt;(2017-10-25) Spring Cloud Contract (HTTP)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=deB70lfUJBU"&gt;(2017-10-18) Bootiful JAX-RS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E_YZwrv-zTk"&gt;(2017-10-11) Bootiful, Reactive Scala&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GlvyHIqT3K4"&gt;(2017-09-27) Reactive WebSockets with Spring Framework 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EoK5a99Bmjc"&gt;(2017-04-05) Creating a Spring Security OAuth Auth Service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[(2017-03-29) The Spring Framework *Utils Classes](&lt;a href="https://www.youtube.com/watch?v=Zo9e3i8HxX4"&gt;https://www.youtube.com/watch?v=Zo9e3i8HxX4&lt;/a&gt;)
&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ogqxbFY_dpY"&gt;(2017-03-22) Servlet Container Deployment Options&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=leZdgr-O4LE"&gt;(2017-03-15) the Spring Web Flux Reactive Client&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2To3_mYT2hc"&gt;(2017-03-08) Server Sent Events (SSE)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q_P28p7XsbQ"&gt;(2017-03-01) Programmatic Bean Registration in Spring Framework 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JyythoOXdbU"&gt;(2017-02-22) MyBatis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=j5QqHSIEcPE"&gt;(2017-02-15) JOOQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CFLZJSwbYI0"&gt;(2017-02-08) Distributed Tracing with Zipkin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=x4nBNLoizOc"&gt;(2017-02-01) Spring Batch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NONg7xrOhPA"&gt;(2017-01-26) Couchbase&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Sw7I70vjN0E"&gt;(2016-12-14) Demystifying Bootiful Magic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=u1QnlAbCFys"&gt;(2016-12-07) Bootiful Dashboards&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=356eqR8XcqE"&gt;(2016-11-30) JTA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=T9KcS8s0RPs"&gt;(2016-11-23) Cloud Foundry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GaHgRw-3K84"&gt;(2016-11-16) Spring Cloud Data Flow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HQ00E60kB6c"&gt;(2016-11-09) Spring Cloud Stream&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=O8nIzE99BJY"&gt;(2016-11-02) Spring Aware Beans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Kc7dDxn9cUg"&gt;(2016-10-27) Circuit Breakers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=90WRtrbRi0Y"&gt;(2016-10-19) The Kotlin Programming Language&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MTKlk8_9aAw"&gt;(2016-10-13) Spring Integration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JjrAmhlTjug"&gt;(2016-10-05) Functional Reactive Endpoints with Spring Framework 5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - May 5th, 2020</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/05/this-week-in-spring-may-5th-2020" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2020-05-06:4055</id>
    <updated>2020-05-05T11:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment fo &lt;em&gt;This Week in Spring&lt;/em&gt;! How&amp;rsquo;re you all holding up? Me? I&amp;rsquo;m doing well, thanks. We&amp;rsquo;ve got a ton of stuff to get to so let&amp;rsquo;s! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/04/spring-cloud-function-native-images"&gt;Spring Cloud Function Native Images&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/01/spring-boot-2-3-0-rc1-available-now"&gt;Spring Boot 2.3.0.RC1 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/05/01/adrian-cole-founder-or-co-founder-of-feign-jclouds-and-spring-cloud-sleuth-and-major-contributor-to-openzipkin"&gt;Adrian Cole, founder or co-founder of Feign, JClouds, and Spring Cloud Sleuth and a major contributor to OpenZipkin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/04/30/spring-for-apache-kafka-2-5-0-release-candidate"&gt;Spring for Apache Kafka 2.5.0 Release Candidate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/04/30/spring-integration-5-3-rc1-5-2-6-5-1-10-available"&gt;Spring Integration 5.3 RC1, 5.2.6 &amp;amp; 5.1.10 Available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/04/30/updates-to-spring-versions"&gt;Updates to Spring Versions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2020/04/29/spring-tips-the-wavefront-observability-platform"&gt;Spring Tips: The Wavefront Observability Platform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I loved this blog &lt;a href="https://medium.com/swlh/cqrs-command-query-responsibility-segregation-72db08ee8282"&gt;on CQRS with Spring Boot and Axon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://t.co/fVY0X5QYOm"&gt;How many different ways does VMware Tanzu support hybrid-cloud on #AWS? &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://toparvion.pro/en/post/2020/integraph/"&gt;How to visualize a Spring Integration graph with Neo4j?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://groups.google.com/d/msg/lettuce-redis-client-users/6h96s-FN1lw/HZtnsDj4BQAJ"&gt;LettuceDriver: Lettuce 5.3.0.RELEASE is out now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This Thursday! Learn how to configure @WavefrontHQ for @springboot Starter and explore &lt;a href="https://t.co/XTmXSddNAn"&gt;free dashboards for instant visibility into your applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://techcrunch.com/2020/04/30/cloud-foundry-renews-its-focus-on-developer-experience-as-it-looks-beyond-the-enterprise/"&gt;&amp;ldquo;Developers stick to a few rules and, in return, they can easily push their apps to Cloud Foundry with a single command (¡°cf push¡±) and know that it will run&amp;hellip;&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the Call for Paper for SpringOne 2020 is now up! &lt;a href="https://twitter.com/springcloud/status/1257710332656697344"&gt;Please send proposals!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Get the &lt;a href="https://www.cloudfoundry.org/blog/bi-weekly-round-up-technical-ecosystem-updates-from-cloud-foundry-5-05-20/"&gt;latest updates in the Cloud Foundry community&lt;/a&gt; with this week&amp;rsquo;s Technical Ecosystem roundup including a new Tutorial Hub and updates on #CFSummit going virtual.&lt;/li&gt;
  &lt;li&gt;Join us today to review how VMware combined #Kubernetes and @cloudfoundry (and more) into a new enterprise application platform: Tanzu Application Service for Kubernetes, now a public beta. &lt;a href="https://t.co/lMNH59a2Xv"&gt;Sign up here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://t.co/ZEQaFx6bpD"&gt;SDKMAN 5.8.1 is rolling out, featuring the new &lt;code&gt;sdk env&lt;/code&gt; command for switching SDKs per project.&lt;/a&gt; This is suepr useful: now with one tool you can easily switch Java versions and - even better - you can version control a file in your application that SDKMAN will know about and read to switch to another version of the JDK.&lt;/li&gt;
  &lt;li&gt;A nice blog on Okta Developer: &lt;a href="https://developer.okta.com/blog/2020/05/04/spring-vault"&gt;Secure Secrets With Spring Cloud Config and Vault &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Have you checked out our new &lt;a href="https://twitter.com/cloudfoundry/status/1257370923797274624"&gt;CloudFoundry tutorial hub yet&lt;/a&gt;? We have a variety of free #cloudnative tutorials built by the community.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/springcentral/status/1257316593660391424"&gt;Your favorites from the #cloudnative community are going on tour&lt;/a&gt;! Join us virtually for the #SpringOneTour for a mix of presentations, interactive demos, and panel discussions.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.marcobehler.com/guides/spring-mvc"&gt;Spring MVC: Building Web Sites &amp;amp; RESTful services&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://thenewstack.io/service-mesh-is-just-the-tip-of-the-iceberg/"&gt;Service Mesh Is Just the Tip of the Iceberg ? The New Stack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;An oldie-but-a-goodie: &lt;a href="https://www.baeldung.com/spring-boot-log-groups"&gt;Log Groups in Spring Boot 2.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Philipp Hauer &lt;a href="https://twitter.com/SpringData/status/1256275605970173953"&gt;just updated his blog about #MongoDB and #Kotlin&lt;/a&gt;. It now also describes a great feature that was added to Spring Data&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.vmware.com/company/news/updates/modern-apps-help-communities-covid-19.html"&gt;How Our Customers Are Using Modern Apps to Help Their Communities through COVID-19&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to learn all about Kubernetes? &lt;a href="https://t.co/TLUrJlQfx5"&gt;Check out KubeAcademy, provided for free by VMWare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The April update of Java on VS Code is out. This update brings you more performance boost, Java 14 support, semantic highlighting, refactoring preview, and some usability improvements.&lt;/li&gt;
  &lt;li&gt;Check out this early &lt;a href="https://t.co/qijNC0N8A3"&gt;access build to project Loom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out the early-access release of Mark Heckler&amp;rsquo;s &lt;a href="https://learning.oreilly.com/library/view/spring-boot-up/9781492076971/"&gt;&lt;em&gt;Spring Boot Book&lt;/em&gt;!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cl4es.github.io/2020/04/27/Zip-Lookups.html"&gt;&amp;ldquo;On the Spring PetClinic application, these improvements have improved startup time by a few hundred milliseconds.&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.aliyun.com/live/2700"&gt;China&amp;rsquo;s largest Java User Group is presenting a live broadcast series on Spring&lt;/a&gt;. I spoke on April 30th, and there are some more interesting talks coming up - don&amp;rsquo;t miss them!&lt;/li&gt;
  &lt;li&gt;Why are the curly braces required for &lt;a href="https://mail.openjdk.java.net/pipermail/amber-dev/2020-April/005899.html"&gt;a minimal &lt;code&gt;record&lt;/code&gt; declaration in Java 14&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Function Native Images</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/04/spring-cloud-function-native-images" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Dave Syer</name>
    </author>
    <id>tag:spring.io,2020-05-04:4053</id>
    <updated>2020-05-04T13:25:00Z</updated>
    <content type="html">&lt;p&gt;Here&amp;rsquo;s the latest graph of memory versus billing for Spring Cloud Function on AWS Lambda. It shows the billing metric GBsec as a function of memory allocation in Lambda for two custom runtimes, one in plain Java and one using a &lt;a href="https://www.graalvm.org/docs/reference-manual/native-image/"&gt;GraalVM native image&lt;/a&gt;, as described recently in this blog by &lt;a href="https://spring.io/blog/2020/04/09/spring-graal-native-0-6-0-released"&gt;Andy Clement&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://docs.google.com/spreadsheets/d/e/2PACX-1vQRWYdp_BpzQg7nA9P7xi9bjTapxu6cYrLi7PFvBmnnKM2zCuVuYzAh25KpFuz0hX0fqJyo1nJO5fyN/pubchart?oid=918725258&amp;format=image" alt="aws-billing-3.x" /&gt;&lt;/p&gt;
&lt;p&gt;In both cases the functionality is identical (a simple POJO-POJO function), and they both show only the results for cold start. Warm starts, where the function was already active when the request came in, were much faster and cheaper (except for the smallest memory setting they all cost the same because there is a minimum charge for all functions in AWS). You can see that the native images start up very fast and that they are more than two times cheaper to run than the regular JVM. The fastest startup was in the 1000MB container - it only took 19ms to start the app, but it took AWS 700ms to prepare the container, so it was billed at 800ms. In fact, all of the cold starts were billed at 800ms for the native image. For the regular JVM the fastest startup was also in the 1000MB container at 300ms, but it was billed at 2200ms.&lt;/p&gt;
&lt;p&gt;For comparison, here&amp;rsquo;s the a similar graph that I published over a year ago when Spring Cloud Function reached its 2.0 release. It showed significant improvements over the 1.x version, and also featured the custom runtime which I am using again here (so the orange bars are the equivalent of the red bars in the graph above):&lt;/p&gt;
&lt;p&gt;&lt;img src="https://docs.google.com/spreadsheets/d/e/2PACX-1vQRWYdp_BpzQg7nA9P7xi9bjTapxu6cYrLi7PFvBmnnKM2zCuVuYzAh25KpFuz0hX0fqJyo1nJO5fyN/pubchart?oid=459598255&amp;format=image" alt="aws-billing" /&gt;&lt;/p&gt;
&lt;p&gt;The custom runtime in the regular JVM is roughly the same in version 3.x, but you can use it at lower memory settings because of Spring Boot optimizations that have been released since then.&lt;/p&gt;&lt;h2&gt;&lt;a href="#building-the-sample" class="anchor" name="building-the-sample"&gt;&lt;/a&gt;Building the Sample&lt;/h2&gt;
&lt;p&gt;The sample app was taken from the &lt;a href="https://github.com/spring-projects-experimental/spring-graal-native/tree/master/spring-graal-native-samples/function-aws"&gt;Spring Graal Native Feature&lt;/a&gt;, but modified to be a function of POJO to POJO, forcing Spring to do some extra work. So compared to the sample in Github I modified the function:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;class Foobar implements Function&amp;lt;Foo, Foo&amp;gt; {&#xD;
&#xD;
	@Override&#xD;
	public Foo apply(Foo input) {&#xD;
		System.err.println(&amp;quot;HI: &amp;quot; + input.getName());&#xD;
		return new Foo(&amp;quot;hi &amp;quot; + input.getName() + &amp;quot;!&amp;quot;);&#xD;
	}&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where the &lt;code&gt;Foo&lt;/code&gt; is defined like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;class Foo {&#xD;
	private String name;&#xD;
&#xD;
	public String getName() {&#xD;
		return name;&#xD;
	}&#xD;
&#xD;
	public void setName(String name) {&#xD;
		this.name = name;&#xD;
	}&#xD;
&#xD;
	public Foo(String name) {&#xD;
		this.name = name;&#xD;
	}&#xD;
&#xD;
	Foo() {&#xD;
	}&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the function is registered in the main application:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;	@Override&#xD;
	public void initialize(GenericApplicationContext context) {&#xD;
		context.registerBean(&amp;quot;foobar&amp;quot;, FunctionRegistration.class,&#xD;
				() -&amp;gt; new FunctionRegistration&amp;lt;&amp;gt;(new Foobar())&#xD;
						.type(FunctionType.from(Foo.class).to(Foo.class)));&#xD;
	}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that I am using the &lt;a href="https://spring.io/blog/2018/10/22/functional-bean-registrations-in-spring-cloud-function"&gt;functional bean registration style&lt;/a&gt;, although it doesn&amp;rsquo;t make much difference for such a simple application.&lt;/p&gt;
&lt;p&gt;I also had to modify the tests to make sure they work with the new POJO signature. You could just delete the tests and the &lt;code&gt;verify.sh&lt;/code&gt; to avoid having to do that, if you just want something quick to work. If you want to see what I did look at the &lt;a href="https://github.com/dsyer/spring-graal-feature/tree/foo/spring-graal-native-samples/function-aws"&gt;foo branch&lt;/a&gt; in my fork.&lt;/p&gt;
&lt;p&gt;Then I built the application in the same way as the other samples. This creates the native image and dumps it in the &lt;code&gt;target&lt;/code&gt; directory:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ ./build.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It also creates a &lt;code&gt;.zip&lt;/code&gt; file to upload to AWS. This one is the regular JVM version:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ ls -l target/*.zip&#xD;
-rw-rw-r-- 1 dsyer dsyer 32577121 Apr 21 09:37 target/function-aws-0.0.1-SNAPSHOT-java-zip.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then this creates a &lt;code&gt;.zip&lt;/code&gt; file for the native image:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;$ ./mvnw package -P native&#xD;
$ ls -l target/*.zip&#xD;
-rw-rw-r-- 1 dsyer dsyer 32577121 Apr 21 09:37 target/function-aws-0.0.1-SNAPSHOT-java-zip.zip&#xD;
-rw-rw-r-- 1 dsyer dsyer 26284838 Apr 21 09:28 target/function-aws-0.0.1-SNAPSHOT-native-zip.zip
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#conclusion" class="anchor" name="conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Using Spring Cloud Function is a very convenient way to develop functions that run on AWS and other platforms. If you also use the experimental Spring Graal Native Feature project to compile the result to a native binary executable they can run faster than the same application on a regular JVM. Note that there is &lt;a href="https://github.com/spring-projects-experimental/spring-graal-native/tree/master/spring-graal-native-samples/function-netty"&gt;another sample&lt;/a&gt; in the Spring Graal Native Feature project that makes a function into a standalone web application (there is also a functional bean registration version of the same sample). You can run that on a lot of platforms that allow you to &amp;ldquo;bring your own container&amp;rdquo;.&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.3.0.RC1 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/01/spring-boot-2-3-0-rc1-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2020-05-01:4051</id>
    <updated>2020-05-01T05:31:01Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone that contributed, I am pleased to announce that the first release candidate of Spring Boot 2.3 is available now from &lt;a href="https://repo.spring.io/milestone/"&gt;our milestone repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release closes over &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.3.0.RC1"&gt;70 issues and pull requests&lt;/a&gt;. Thanks to all those who have contributed.&lt;/p&gt;
&lt;p&gt;Highlights of this milestone include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Auto-configuration of a Wavefront sender bean.&lt;/li&gt;
  &lt;li&gt;Easier configuration of the data/time converts used by web applications.&lt;/li&gt;
  &lt;li&gt;Automatic creation of the &lt;code&gt;developmentOnly&lt;/code&gt; configuration in Gradle.&lt;/li&gt;
  &lt;li&gt;Java buildpack support from the newly created &lt;a href="https://paketo.io/"&gt;Paketo&lt;/a&gt; project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a complete list of changes and upgrade instructions, please see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3.0-RC1-Release-Notes"&gt;Spring Boot 2.3 Release Notes&lt;/a&gt; on the wiki and the &lt;a href="http://docs.spring.io/spring-boot/docs/2.3.0.RC1/reference/html/"&gt;updated reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Barring any unforeseen circumstances, our current plan is to release 2.3.0 GA on May 14, so please give the RC a try if you can. To bootstrap a new project, you can head over to &lt;a href="https://start.spring.io"&gt;https://start.spring.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/2.3.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Adrian Cole, founder or co-founder of Feign, JClouds, and Spring Cloud Sleuth and major contributor to OpenZipkin</title>
    <link rel="alternate" href="https://spring.io/blog/2020/05/01/adrian-cole-founder-or-co-founder-of-feign-jclouds-and-spring-cloud-sleuth-and-major-contributor-to-openzipkin" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2020-05-01:4050</id>
    <updated>2020-05-01T03:36:37Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this installment &lt;a href="http://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to the founder of - among other things - Feign, JCloud, and Spring Cloud Sleuth - &lt;a href="https://twitter.com/adrianfcole"&gt;Adrian Cole (@adrianfcole)&lt;/a&gt; about distributed tracing, Zipkin, and more. &lt;/p&gt;
&lt;iframe title="Adrian Cole, founder or co-founder of Feign, JClouds, and Spring Cloud Sleuth and major contributor to OpenZipkin" src="https://www.podbean.com/media/player/ser7i-db042c?from=usersite&amp;vjs=1&amp;skin=1&amp;fonts=Helvetica&amp;auto=0&amp;download=1" height="315" width="100%" style="border: none;" scrolling="no" data-name="pb-iframe-player"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
</feed>
