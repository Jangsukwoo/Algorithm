package SamsungDS;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class 마법사상어와파이어볼 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N,M,K;
	static ArrayList<Mass> massList;
	static ArrayList[][] space;
	static int[] dr = {-1,-1,0,1,1,1,0,-1};
	static int[] dc = {0,1,1,1,0,-1,-1,-1};
	static class Mass{
		int row;
		int col;
		int mass;
		int speed;
		int dir;
		public Mass(int row, int col, int mass, int speed, int dir) {
			this.row = row;
			this.col = col;
			this.mass = mass;
			this.speed = speed;
			this.dir = dir;
		}
	}
	public static void main(String[] args) throws IOException {
		setData();
		simulation();
	}
	private static void simulation() {
		int year=1;
		while(year<=K) {
			initailaztionSpaceMap();
			setNextCoordination();
			getNewMassList();
			year++;
		}
	}
	private static void getNewMassList() {
		massList.clear();
		for(int row=0;row<N;row++){
			for(int col=0;col<N;col++) {
				if(space[row][col].size()>1) {
					
				}
			}
		}
	}
	private static void initailaztionSpaceMap() {
		for(int row=0;row<N;row++) {
			for(int col=0;col<N;col++) {
				space[row][col] = new ArrayList<Mass>();
			}
		}
	}
	private static void setNextCoordination() {
		for(int i=0;i<massList.size();i++) {
			Mass currentMass = massList.get(i);
			int cr = currentMass.row;
			int cc = currentMass.col;
			int cs = currentMass.speed;
			int dir = currentMass.dir;
			int nr = cr;
			int nc = cc;
			for(int s=0;s<cs;s++) {
				nr+=dr[dir];
				nc+=dc[dir];
				if(nr==N) nr=0;
				if(nc==N) nc=0;
				if(nr==-1) nr=(N-1);
				if(nc==-1) nc=(N-1);
			}
			currentMass.row = nr;
			currentMass.col = nc;
			space[nr][nc].add(currentMass);
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		massList = new ArrayList<Mass>();
		space = new ArrayList[N][N];
		for(int i=0;i<M;i++) {
			 st = new StringTokenizer(br.readLine());
			int row = Integer.parseInt(st.nextToken());
			int col = Integer.parseInt(st.nextToken());
			int mass = Integer.parseInt(st.nextToken());
			int speed = Integer.parseInt(st.nextToken());
			int dir = Integer.parseInt(st.nextToken());
			massList.add(new Mass(row, col, mass, speed, dir));
		}
	}
}
