package CodingStudy;

import java.util.HashSet;
import java.util.LinkedHashSet;

/*
 * String인  numbers 문자의 최대 사이즈 7
 * 17,71 처럼 순서가 있으니 Permutation nPr 
 */
public class 소수찾기 {
	static int prime;
	static int n,r;
	static boolean[] visit;
	static char[] number;
	static char[] data;
	static HashSet<Integer> primeSet = new LinkedHashSet<Integer>();
	public static void main(String[] args) {
		solution("17");
	}
    public static int solution(String numbers) {
        int answer = 0;
        data = numbers.toCharArray();
        n = numbers.length();
        for(int i=1;i<=n;i++){//nPr
        	visit = new boolean[n];
        	number = new char[i];
        	r = i;
        	permutation(0);
        }
        return answer;
    }
	private static void permutation(int cnt) {
		if(cnt==r){
			String stringNumber="";
			for(int i=0;i<r;i++){
				stringNumber+=number[i];
			}
			int num = Integer.parseInt(stringNumber);
			isPrime(num);
			return;
		}
		for(int i=0;i<n;i++){
			if(visit[i]==false){
				visit[i] = true;
				number[cnt] = data[i];
				permutation(cnt+1);
				visit[i] = false;
			}
		}
	}
	private static void isPrime(int num) {
		
	}
}
