package 구현;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.StringTokenizer;

/*
 * 18:00
 * 진수가 적어도 K명의 병사를 이길 수 있는
 * 최소의 스탯포인트
3 3
10 5 5
5 10 5
5 5 0
 */
public class 용감한용사진수 {
	static int N,K;//병사수, 이겨야할 수
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int answer;
	static ArrayList<Enemy> enemylist = new ArrayList<Enemy>();
	static Jinsu jinsu = new Jinsu(0,0,0);
	static class Jinsu{
		int power;
		int dex;
		int intelligence;
		public Jinsu(int power, int dex, int intelligence) {
			this.power = power;
			this.dex = dex;
			this.intelligence = intelligence;
		}
	}
	static class Enemy{
		int power;
		int dex;
		int intelligence;
		int allStat;
		public Enemy(int power, int dex, int intelligence, int allStat) {
			super();
			this.power = power;
			this.dex = dex;
			this.intelligence = intelligence;
			this.allStat = allStat;
		}
	}
	public static void main(String[] args) throws IOException {
		setData();
		sorting();
		getAnswer();
		System.out.println(answer);
	}
	private static void getAnswer() {
		for(int i=0;i<K;i++) {
			if(jinsu.power<=enemylist.get(i).power) jinsu.power+=(enemylist.get(i).power-jinsu.power);
			if(jinsu.dex<=enemylist.get(i).dex) jinsu.dex+=(enemylist.get(i).dex-jinsu.dex);
			if(jinsu.intelligence<=enemylist.get(i).intelligence) jinsu.intelligence+=(enemylist.get(i).intelligence-jinsu.intelligence);
		}
		answer = jinsu.power+jinsu.dex+jinsu.intelligence;
	}
	private static void sorting() {
		Collections.sort(enemylist,new Comparator<Enemy>() {
			@Override
			public int compare(Enemy o1, Enemy o2) {
				return Integer.compare(o1.allStat,o2.allStat);
			}
		});
	}
	private static void setData() throws IOException{
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		for(int i=0,p,d,in;i<N;i++) {
			st = new StringTokenizer(br.readLine());
			p = Integer.parseInt(st.nextToken());
			d = Integer.parseInt(st.nextToken());
			in = Integer.parseInt(st.nextToken());
			enemylist.add(new Enemy(p,d,in,(p+d+in)));
		}
	}
}
