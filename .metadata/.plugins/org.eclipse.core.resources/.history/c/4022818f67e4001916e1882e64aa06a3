package Codeforce;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Scanner;
import java.util.StringTokenizer;

public class SocialNetwork {
	static int messages;
	static int conversations;
	static int[] ids;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		//쪼갠 값이 존재할때까지 반복
		messages = Integer.parseInt(st.nextToken());
		conversations = Integer.parseInt(st.nextToken());
		ids = new int[messages];
		st = new StringTokenizer(br.readLine(), " ");
		Deque<Integer> dq = new ArrayDeque<Integer>();
		for(int id=0;id<messages;id++) {
			ids[id] = Integer.parseInt(st.nextToken());
			if(dq.size()!=conversations){//데크에 여유가있고
				if(dq.contains(ids[id])) continue; //지금 값이 존재하면
				else dq.addFirst(ids[id]); //존재하지않으면 입구로 삽임
			}
			else{//데크에 여유가 없으면
				if(dq.contains(ids[id])) continue; //지금 값이 존재하면
				else {//존재하지않으면 입구로 삽임
					dq.removeLast();//출구로 값 하나 빼고
					dq.addFirst(ids[id]);//지금값 입구로 삽입
				}
			}
		}
		int dqSize = dq.size();
		System.out.println(dqSize);
		for(int i=0; i<dqSize;i++) {
			System.out.print(dq.removeFirst()+" ");
		}
	}
}
