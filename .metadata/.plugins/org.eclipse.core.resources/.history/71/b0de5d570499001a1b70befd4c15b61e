package CodingAcademy;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.net.URL;
import java.net.URLConnection;
import java.net.UnknownHostException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;



public class 단어퍼즐 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	static char[][] puzzle = new char[5][5];
	static boolean[][] visit = new boolean[5][5];
	static int[] dr = {-1,-1,0,1,1,1,0,-1};
	static int[] dc = {0,1,1,1,0,-1,-1,-1}; //8방향
	static int answer;
	public static void main(String[] args) throws IOException{
		getDictionary();
		setData();
	}
	private static void getDictionary() throws UnknownHostException, IOException {
		/*
		 * "https://d2gd6pc034wcta.cloudfront.net/data/1165.zip"
		 * "/TESTDATA/coggle.zip"
		 * 66.113.2.158
		 * 
		 */
		URL url = new URL("https://d2gd6pc034wcta.cloudfront.net/data/1165.zip");
        URLConnection conn = url.openConnection();
        InputStream in = conn.getInputStream();
        File zipFile = new File("https://d2gd6pc034wcta.cloudfront.net/data/1165.zip");
        ZipFile zip = new ZipFile(zipFile);
		//Socket socket = new Socket("66.113.2.158//TESTDATA/coggle.zip",80);
      
        ZipInputStream zis = new ZipInputStream(in);
        ZipEntry entry;
        while ((entry = zis.getNextEntry()) != null) {
            System.out.println("entry: " + entry.getName() + ", "
                    + entry.getSize());
            BufferedReader bufferedeReader = new BufferedReader(
                    new InputStreamReader(zip.getInputStream(entry)));
            String line = bufferedeReader.readLine();
            while (line != null) {
                System.out.println(line);
                line = bufferedeReader.readLine();
            }
            bufferedeReader.close();
        }
//        byte[] buf = new byte[4096];
//        for(int br = in.read(buf); br > -1; br = in.read(buf)){
//          System.out.write(buf, 0 , br);
//        }  
	}
	private static void setData() {
		
	}	
}
