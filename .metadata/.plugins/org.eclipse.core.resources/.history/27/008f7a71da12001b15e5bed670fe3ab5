package CodingTest;

public class 느흐느TEST {
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static boolean[][] visit;
	static int answer;
	static int area;
	static int N;
	static StringBuilder sb = new StringBuilder();
	public static void main(String[] args) {

	}
	private static void solution(int sizeOfMatrix, int[][] matrix) {
		N = sizeOfMatrix;
		for(int row=0;row<sizeOfMatrix;row+) {
			for(int col=0;col<sizeOfMatrix;col++) {
				if(visit[row][col]==false && matrix[row][col]==1) {
					answer++;
					area=1;
					dfs(row,col,matrix);
					sb.append(area+" ");
				}
			}
		}
		System.out.println(answer);
		System.out.println(sb.toString());
	}
	private static void dfs(int row, int col, int[][] matrix) {
		for(int dir=0;dir<4;dir++) {
			int nr= row+dr[dir];
			int nc= col+dc[dir];
			if(rangeCheck(nr,nc) && visit[nr][nc]==false && matrix[nr][nc]==1) {
				visit[nr][nc]=true;
				area++;
				dfs(nr,nc,matrix);
			}
		}
	}
	private static boolean rangeCheck(int nr, int nc) {
		if(nr>=0 && nr<N && nc>=0 && nc<N) return true;
		return false;
	}
}
