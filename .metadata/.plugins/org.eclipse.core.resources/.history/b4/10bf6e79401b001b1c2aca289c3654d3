package CodingTest;

import java.util.LinkedList;
import java.util.Queue;

public class 플그윈터2 {
	public static void main(String[] args) {
		solution("zzz","ayx",0);
	}
    public static String solution(String encrypted_text, String key, int rotation) {
        String answer = "";
        String rerotation_text = "";
        char[] alphabetSet = new char[27];
        for(int i=1;i<=26;i++) alphabetSet[i] = 'a'+ i-1;
        
        int shiftCnt = Math.abs(rotation);
        Queue<Character> q = new LinkedList<Character>();
        if(rotation<0) {//음수였으니 오른쪽으로
            for(int i=encrypted_text.length()-1; i>=0;i--){
            	q.add(encrypted_text.charAt(i));
            }
    		for(int i=0;i<shiftCnt;i++) {
    			char popChar = q.poll();
    			q.add(popChar);
    		}
    		while(!q.isEmpty()) rerotation_text+=q.poll();
    	}else if(rotation==0) {
    		rerotation_text = String.copyValueOf(encrypted_text.toCharArray());
    	}else if(rotation>0) {//양수였으니 왼쪽으로
            for(int i=0; i<encrypted_text.length();i++){
            	q.add(encrypted_text.charAt(i));
            }
    		for(int i=0;i<shiftCnt;i++) {
    			char popChar = q.poll();
    			q.add(popChar);
    		}
    		while(!q.isEmpty()) rerotation_text+=q.poll();
    	}
        for(int i=0;i<key.length();i++) {
        	int decrptedKey = key.charAt(i)-'a' + 1;
        	System.out.println(decrptedKey+"칸앞으로");
        	int getASCII = rerotation_text.charAt(i)-'a' - decrptedKey;
        	System.out.println(getASCII);
        	if(getASCII<0) getASCII = 26+getASCII;
        	answer+= (char) ('a'+getASCII);
        }
        System.out.println(answer);
        return answer;
    }
}
