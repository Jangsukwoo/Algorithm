package CodingStudy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
/*
 * 11:30 시작
 * 
 * - 면
 * 윗 : U
 * 아래 : D
 * 앞 : F
 * 뒤 : B
 * 왼 : L
 * 오 : R
 * 
 * - 색
 * w:흰
 * y:노
 * r:빨
 * o:오
 * g:초
 * b:파
 * 
 * -방향
 * +:시계
 * -:반시계
 */
public class 큐빙 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N;
	static char[][] cube = new char[12][9];//전개도
	public static void main(String[] args) throws NumberFormatException, IOException {
		int T = Integer.parseInt(br.readLine());
		for(int testcase=1;testcase<=T;testcase++){
			cubeInitailize();
			rotate();
			view();
		}
	}

	private static void rotate() throws NumberFormatException, IOException {
		int rotateSize = Integer.parseInt(br.readLine());
		char[][] command = new char[rotateSize][2];
		st = new StringTokenizer(br.readLine());
		for(int rotate=0;rotate<rotateSize;rotate++){
			command[rotate] = st.nextToken().toCharArray();
			spin(command[rotate]);
		}
	}
	private static void spin(char[] command) {
		char face = command[0];
		char clockwise = command[1];
		switch (face){
		case value:
			
			break;

		default:
			break;
		}
	}

	private static void cubeInitailize(){
		//큐브 초기화
		for(int row=0;row<=2;row++) {
			for(int col=3;col<=5;col++) {
				cube[row][col]='w';
			}
		}//면,흰
		for(int row=3;row<=5;row++) {
			for(int col=0;col<=2;col++){
				cube[row][col]='g';
			}
		}//왼쪽,초
		for(int row=3;row<=5;row++) {
			for(int col=3;col<=5;col++){
				cube[row][col]='r';
			}
		}//앞,빨
		for(int row=3;row<=5;row++) {
			for(int col=6;col<=8;col++){
				cube[row][col]='b';
			}
		}//아래,노
		for(int row=6;row<=8;row++) {
			for(int col=3;col<=5;col++){
				cube[row][col]='y';
			}
		}//뒤,오
		for(int row=9;row<=11;row++) {
			for(int col=3;col<=5;col++){
				cube[row][col]='o';
			}
		}//오른쪽,파
	}
	private static void view(){
		//큐브 전개도
		for(int row=0;row<12;row++) {
			for(int col=0;col<9;col++) {
				System.out.print(cube[row][col]);
			}
			System.out.println();
		}
		System.out.println();
	}
}
