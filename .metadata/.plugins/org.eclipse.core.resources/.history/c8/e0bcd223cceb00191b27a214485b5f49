package Samsung;

import java.util.Arrays;
import java.util.Scanner;
class RotateOperation{
	int r;
	int c;
	int s;
	public RotateOperation(int r,int c,int s) {
		this.r = r;
		this.c = c;
		this.s = s;
	}
}
public class 상시_배열돌리기4 {
	static int N,M,K;//row,col,회전연산개수
	static int[][] matrix;
	static int[][] testingmatrix;
	static RotateOperation[] rotateoperation;
	static boolean[] visit;
	static int[] rotateCase;
	static int min = Integer.MAX_VALUE;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		K = sc.nextInt();
		matrix = new int[N][M];
		rotateoperation = new RotateOperation[K];
		rotateCase = new int[K];
		visit = new boolean[K];
		for(int row=0;row<N;row++)
			for(int col=0;col<M;col++) matrix[row][col] = sc.nextInt();
		for(int i=0;i<K;i++) {
			int r = sc.nextInt();
			int c = sc.nextInt();
			int s = sc.nextInt();
			rotateoperation[i] = new RotateOperation(r, c, s);
		}
		permutaion(0);
	}
	private static void permutaion(int cnt) {
		if(cnt==K){
			setTestingMatrix();
			rotate();
			return ;
		}
		for(int i=0;i<K;i++){
			if(visit[i]==false) {
				visit[i] = true;
				rotateCase[cnt] = i;
				permutaion(cnt+1);
				visit[i] = false;
			}
		}
	}
	private static void rotate() {
		for(int i=0;i<K;i++){
			int leftTopRow = rotateoperation[rotateCase[i]].r-rotateoperation[rotateCase[i]].s;
			int leftTopCol = rotateoperation[rotateCase[i]].c-rotateoperation[rotateCase[i]].s;
			int rightBottomRow = rotateoperation[rotateCase[i]].r+rotateoperation[rotateCase[i]].s;
			int rightBottomCol = rotateoperation[rotateCase[i]].c+rotateoperation[rotateCase[i]].s;
		}
	}
	private static void setTestingMatrix() {
		for(int row=0;row<N;row++)
			for(int col=0;col<M;col++) testingmatrix[row][col] = matrix[row][col];
	}
}
