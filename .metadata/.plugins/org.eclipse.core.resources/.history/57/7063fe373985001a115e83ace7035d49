package CodingStudyHW;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * 미로탈출하기
 * 17:00 ~
 * 탈출 가능한 칸의 수 ?
 * dfs로 가면서 탈출 성공 하면 그 경로는 전부 가능하다고 메모 후 
 * 성공한 길에 대해서는 백트랙킹하기
 */
public class 미로탈출하기 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static int R,C;
	static char[][] maze;
	static boolean[][] visit;
	static boolean[][] memo;
	public static void main(String[] args) throws IOException {
		setData();
		dfsAll();
	}

	private static void dfsAll() {
		// TODO Auto-generated method stub
		
	}

	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		maze = new char [R][C];
		visit = new boolean[R][C];
		memo = new boolean[R][C];
		for(int row=0;row<R;row++) maze[row] = br.readLine().toCharArray();
	}
}
