package CodingStudySamsungProblem;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.StringTokenizer;
/*
 * 낚시꾼은 한칸씩 옆으로 이동함.
 * 상어는 각자 방향과 크기를 가지고 있고 
 * 1초씩 각자 이동한다.
 * 1초 후 한칸에 상어가 두마리 이상 있는 경우에는
 * 가장 크기가 큰 상어가 나머지를 다 잡아먹는다.
 * 
 * 
 */
public class 낚시왕 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int R,C,M;//row,col,상어수
	static int sharkSize;
	static int[][] aquarium;
	static PriorityQueue<Shark>[][] sharkPQueue;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static class Shark{
		int row;
		int col;
		int speed;
		int dir;
		int size;
		public Shark(int row, int col, int speed, int dir, int size) {
			this.row = row;
			this.col = col;
			this.speed = speed;
			this.dir = dir;
			this.size = size;
		}
	}
	public static void main(String[] args) throws IOException {
		setData();
	}

	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		sharkPQueue = new PriorityQueue[R+1][C+1];
		for(int row=1;row<=R;row++)
			for(int col=1;col<=C;col++) sharkPQueue[row][col] = new PriorityQueue<Shark>();
		System.out.println(sharkPQueue[2][2].size());
		aquarium = new int[R+1][C+1];
		for(int i=0,row,col,speed,dir,size;i<M;i++) {
			st = new StringTokenizer(br.readLine());
			row = Integer.parseInt(st.nextToken());
			col = Integer.parseInt(st.nextToken());
			speed = Integer.parseInt(st.nextToken());
			dir = Integer.parseInt(st.nextToken());
			size = Integer.parseInt(st.nextToken());
		}

	}	
}
