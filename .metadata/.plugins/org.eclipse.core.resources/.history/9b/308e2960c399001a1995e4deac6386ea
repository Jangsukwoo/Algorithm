package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * 시작칸에 말 4개
 * 
 */
public class 주사위윷놀이 {
	static int[] redCircleLine = {0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40};
	static int[] blueLeftLine = {10,13,16,19};
	static int[] blueCenterLine = {20,22,24};
	static int[] blueRightLine = {30,28,27,26};
	static int[] lastLine = {25,30,35,40};
	static boolean[] redCircleVisit;
	static boolean[] blueLeftVisit;
	static boolean[] blueCenterVisit;
	static boolean[] blueRightVisit;
	static boolean[] lastVisit;
	static Horse[] horeslist = new Horse[4];
	static int[] dice = new int[10];
	static int[] pickHorseIdx = new int[10];
	static StringTokenizer st;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static class Horse{
		String line;
		int redCircleIdx;
		int blueLeftIdx;
		int blueCenterIdx;
		int blueRightIdx;
		int lastIdx;
	}
	public static void main(String[] args) throws IOException {
		setData();
		duplicationPermutation(0);
	}
	private static void duplicationPermutation(int depth) {
		if(depth==10){
			initailization();
			if(simulation()){
				
			}
			return;
		}
		for(int i=0;i<10;i++){
			pickHorseIdx[depth] = i;
			duplicationPermutation(depth+1);
		}
	}
	private static void initailization() {
		redCircleVisit = new boolean[redCircleLine.length];
		blueLeftVisit = new boolean[blueLeftLine.length];
		blueCenterVisit = new boolean[blueCenterLine.length];
		blueRightVisit = new boolean[blueRightLine.length];
		lastVisit = new boolean[lastLine.length];
		
	}
	private static boolean simulation(){
		for(int i=0;i<10;i++){
			
		}
		return true;
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
	}
}
