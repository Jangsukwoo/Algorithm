package CodingStudy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

/*
 * 
 */
public class 문자판 {
	static int N,M,K;
	static char[][] letterBoard;
	static Queue<int[]> q;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static String target;
	static int length;
	static int targetLength;
	static int path;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	public static void main(String[] args) throws IOException{
		setData();
		for(int row=0;row<N;row++) {
			for(int col=0;col<M;col++) {
				if(target.charAt(0)==letterBoard[row][col]) {
					q.clear();
					q.add(new int[] {row,col});
					length++;
					bfs();
				}
			}
		}
	}
	private static void bfs(){
		int letterPointer=1;
		while(!q.isEmpty()){
			int size = q.size();
			for(int i=0;)
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		letterBoard = new char[N][M];
		for(int row=0;row<N;row++) {
			letterBoard[row] = br.readLine().toCharArray();
		}
		target = br.readLine();
		targetLength = target.length();
	}
}
