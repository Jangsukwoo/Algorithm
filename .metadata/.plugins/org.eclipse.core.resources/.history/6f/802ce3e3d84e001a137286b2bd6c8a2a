package CodingStudy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * N by M 배열이 있음
 * 
 * 배열 A의 최소값은 각 행 별로의 합들 중에 최소값
 * 
 * 돌리는건 시계방향이고
 * 회전정보가 주어질 때 
 * 회전 연산을 k회 수행 후 최종 최소값 출력
 */

public class 배열돌리기4 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[][] A;
	static int[][] rcs;
	static int N,M,K;
	static int min=Integer.MAX_VALUE;
	public static void main(String[] args) throws IOException {
		setData();
		rotate();
	}
	private static void rotate() {
		for(int spin=0;spin<K;spin++){
			rotateArray(rcs[spin][0],rcs[spin][1],rcs[spin][2]);
		}
	}
	private static void rotateArray(int i, int j, int l) {
		
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());//행
		M = Integer.parseInt(st.nextToken());//열
		K = Integer.parseInt(st.nextToken());
		A = new int[N][M];
		rcs = new int[K][3];
		for(int row=0;row<N;row++){
			st = new StringTokenizer(br.readLine());
			for(int col=0;col<M;col++) {
				A[row][col] = Integer.parseInt(st.nextToken());
			}
		}
		for(int i=0;i<K;i++){
			st = new StringTokenizer(br.readLine());
			rcs[i][0] = Integer.parseInt(st.nextToken())-1;
			rcs[i][1] = Integer.parseInt(st.nextToken())-1;
			rcs[i][2] = Integer.parseInt(st.nextToken());
		}
	}
}
