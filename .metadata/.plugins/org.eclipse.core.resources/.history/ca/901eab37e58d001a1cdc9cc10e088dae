package BAEKJOON;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

/*
 * 17:15~
 * N By M 격자판
 * . : 이동 가능
 * # : 벽
 * 열쇠 : a~f 열쇠
 * 문 : A~F 
 * 0 : 민식이 위치
 * 1 : 출구
 * 
 ##1##
 ##B##
 ##A##
 ##F##
 ##f##
 ##f.b
 ##f##
 ##0##
 ##a##
 
 6C1 ~ 6C6
 6 + 15 + 20 + 15 + 6 + 1 
 63
 boolean[][][] 50 50 63 
 */
public class 달이차오른다가자 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N,M;
	static char[][] maze;
	static Queue<Minsik> q = new LinkedList<Minsik>();
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static boolean[][][][][][][][] visit;
	static class Minsik{
		int row;
		int col;
		boolean[] keys;
		int move;
		public Minsik(int row, int col,int move) {
			this.row = row;
			this.col = col;
			this.move = move;
			this.keys = new boolean[6];
		}
		public void setKey(char key){
			this.keys[key-'a'] = true;
		}
		public boolean isContain(char key) {
			return this.keys[key-'a'];
		}
		public String getKeyInformation(){
			String keyset = "";
			for(int i=0;i<6;i++) {
				if(keys[i]) keyset+="1";
			}
		}
	}
	public static void main(String[] args) throws IOException {
		setData();
	}

	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		maze = new char[N][M];
		for(int row=0;row<N;row++) {
			maze[row] = br.readLine().toCharArray();
		}
		
	}
}
