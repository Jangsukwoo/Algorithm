package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

/*
 * 19:58~
 */
public class 두동전 {
	static int R,C;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static char[][] map;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static Queue<CoinInformation> q = new LinkedList<CoinInformation>();
	static int answer;
	static class CoinInformation{
		 int coin1R,coin1C;
		 int coin2R,coint2C;
		 boolean coin1, coin2;
		public CoinInformation(int coin1r, int coin1c, int coin2r, int coint2c, boolean coin1, boolean coin2) {
			coin1R = coin1r;
			coin1C = coin1c;
			coin2R = coin2r;
			coint2C = coint2c;
			this.coin1 = coin1;
			this.coin2 = coin2;
		}
		 
	}
	public static void main(String[] args) throws IOException {
		setData();
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		map = new char[R][C];
		boolean flag = false;
		int coin1r,coin1c,coin2r,coin2c;
		for(int row=0;row<R;row++) {
			map[row] = br.readLine().toCharArray();
			for(int col=0;col<C;col++){
				if(map[row][col]=='o' && flag == false) {
					coin1r = row;
					coin1c = col;
				}else if(map[row][col]=='o' && flag) {
					coin2r=row;
					coin2c=col;
				}
			}
		}
		insertQueue(new CoinInformation(coin1r, coin1c, coin2r, coint2c, true, true));
	}
}
