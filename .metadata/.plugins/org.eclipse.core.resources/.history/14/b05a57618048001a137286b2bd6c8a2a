package CodingStudySamsungProblem;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * 
 */
public class 원판돌리기 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static int[][] circleBoard;
	static int N,M,T;//반지름,적힌숫자크기,회전수
	static int x,d,k;//x의 배수인 원판을 d방향으로 k칸 회전
	//0은 시계방향 1은 반시계방향
	//인접하면서 수가 같은 것은 모두 지운다.
	//없는 경우는 원판에 적힌 수의 평균을 구한 뒤 평균보다 큰 수에서 1을 빼고 작은수에는 1을 더함
	static StringTokenizer st;
	static int circleBoardSum;
	public static void main(String[] args) throws IOException {
		setData();
		rotate();
	}
	private static void rotate() {
		for(int spin=0;spin<T;spin++) {//T번 회전
			for(int multiple=1;multiple<=N;multiple++) {
				if(x%multiple==0){//x의 배수면
					
				}
			}
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		T = Integer.parseInt(st.nextToken());
		circleBoard = new int[N+1][M];
		for(int radius=1;radius<=N;radius++){
			st = new StringTokenizer(br.readLine());
			for(int position =0; position<M;position++) {
				circleBoard[radius][position] = Integer.parseInt(st.nextToken());
			}
		}
		st = new StringTokenizer(br.readLine());
		x = Integer.parseInt(st.nextToken());
		d = Integer.parseInt(st.nextToken());
		k = Integer.parseInt(st.nextToken());
	}
}
