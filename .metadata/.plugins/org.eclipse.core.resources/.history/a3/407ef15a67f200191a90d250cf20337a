package Samsung;

import java.util.ArrayList;
import java.util.Scanner;

/*
 * 645
 * 침착하고 집중하자
 * 상황파악 ->시뮬?완탐?
 * ->시뮬 -> 구현
 * ->완탐 -> 내부처리 자료구조 고민 + 구현방법 고민
 * 
 * ->구현
 */
class Ladder{
	int row;
	int col;
	public Ladder(int r, int c) {
		row = r;
		col = c;
	}
}
public class 사다리조작 {
	static int N,M,H;//N:세로선 개수 , M은 가로선 개수 , H 가로선 놓을 수 있는 위치 개수
	static int[][] ladder;
	static boolean[][] putLadder;
	static int addLadder;
	static int r;
	static int min;
	static ArrayList<Ladder> ladderCase;
	static int[] tryCase;
	static int[] dr = {0,1,0};
	static int[] dc = {1,0,-1};//우 하 좌
	static int ladderCaseSize;
	static boolean[][] laddervisit;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt()+1;
		M = sc.nextInt();
		H = sc.nextInt()+1;
		ladder = new int[H][N];
		putLadder = new boolean[H][N];
		laddervisit= new boolean[H][N];
		for(int i=0;i<M;i++){
			int a = sc.nextInt();
			int b = sc.nextInt();
			ladder[a][b]=1;
			ladder[a][b+1]=1;
		}
		System.out.println(ladderCaseSize);
		view();
		for(int ad=1;ad<=3;ad++) {
			r = ad;
			tryCase = new int[r];
			dfs(0,0);
		}
		System.out.println(min);

	}

	private static void dfs(int idx, int cnt){
		if(cnt==r){
		}
		for(int i=idx;i<ladderCaseSize;i++){
			tryCase[cnt] = i;
			dfs(i+1,cnt+1);
		}
	}
	
	private static boolean check() {
		for(int row=1;row<H;row++){
			int cnt=0;
			for(int col=1;col<N;col++){
				if(ladder[row][col]==1) cnt++;
				else if(ladder[row][col]==0){
					if(cnt>2) return false;
					else cnt=0;
				}
			}
			if(cnt>2) return false;
		}
		return true;
	}

	private static void view() {
		for(int row=1;row<H;row++) {
			for(int col=1;col<N;col++) {
				System.out.print(ladder[row][col]+" ");
			}
			System.out.println();
		}
		System.out.println();
	}
}
