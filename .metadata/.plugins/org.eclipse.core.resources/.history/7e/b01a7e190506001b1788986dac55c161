package SamsungDS;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class 신기한소수 {
	static int N;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	static int[] startArray = new int[] {2,3,5,7};
	static boolean impossible = false;
	public static void main(String[] args) throws NumberFormatException, IOException {
		N = Integer.parseInt(br.readLine());
		for(int s=0;s<startArray.length;s++) {//시작 수 
			int start = startArray[s];
			impossible = false;
			int checkNum = start;
			dfs(checkNum,9);
			for(int pos = 0;pos<N;pos++){ //자리수
				checkNum = (int) (start/Math.pow(10,pos));
				for(int i=1;i<=10;i+=2) {
					int temp = checkNum+i; //홀수 더해봄 
					impossible = isPrime(temp);
					if(impossible) break;
				}
				System.out.println(start+" "+checkNum);
			}
			if(impossible==false) System.out.println(checkNum);
		}
	}
	private static void dfs(int checkNum, int i) {
		// TODO Auto-generated method stub
		
	}
	private static boolean isPrime(int temp) {
		for(int j=3;j<=Math.sqrt(temp);j++){
			if(temp%j==0) return true;
		}
		return false;
	}
}
