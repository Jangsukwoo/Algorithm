package CodingTest;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class childOfTree {
	static int N,M;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static long ans;
	static ArrayList<Integer>[] edgeList;
	static int[] memo;
	public static void main(String[] args) throws IOException {
		setData();
		bfs();
	}

	private static void bfs() {
		Queue<Integer> q = new LinkedList<Integer>();
		q.add(0);
		while(!q.isEmpty()){
			
		}
	}

	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		st = new StringTokenizer(br.readLine());
		edgeList = new ArrayList[N];
		memo = new int[N];
		for(int i=0;i<N;i++) edgeList[i] = new ArrayList<Integer>();
		for(int child=0,parent;child<N;child++){
			parent = Integer.parseInt(st.nextToken());
			edgeList[child].add(parent);
		}
		
	}
}
