package BAEKJOON;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
/*
 * 9:40~
 * 0은 땅
 * 1은 벽
 * 2는 그람
 * 
 * 성입구 0,0
 * 공주 위치 N-1,M-1
 * 
 * int[3]에서
 * 0,1은 row,col
 * 2는 그람 보유 유무
 */
public class 공주님을구해라 {
	static int N,M,T;//row,col,time
	static int[][] castle;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};//상우하좌
	static Queue<int[]> q = new LinkedList<int[]>();
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		T = sc.nextInt();
		castle = new int[N][M];
		for(int row=0;row<N;row++)
			for(int col=0;col<M;col++) castle[row][col] = sc.nextInt();
		q.add(new int[]{0,0,0});
		BFS();
	}
	private static void BFS() {
		while(!q.isEmpty()){
			int size = q.size();
			for(int i=0;i<size;i++) {
				int[] curRC = q.poll();
				for(int dir=0;dir<4;dir++) {
					int nr = curRC[0];
					int nc = curRC[1];
					if(rangeCheck(nr,nc)){//영역 만족하는데
						switch(curRC[2]){ //그람이 있으면 1
						case 0://그람이 없으면
							if(castle[nr][nc]==1){
								
							}
							break;
						case 1:
							break;
						}
					}
				}
			}
		}
	}
	private static boolean rangeCheck(int nr, int nc) {
		if(nr>=0 && nr<N && nc>=0 && nc<M) return true;
		return false;
	}
}
