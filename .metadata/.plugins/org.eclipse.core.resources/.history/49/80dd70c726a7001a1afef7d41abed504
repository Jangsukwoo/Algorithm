package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;



/*
 * +,-,*,/
 * 
1
5
2 1 0 1
3 5 3 7 9
 */
public class 숫자만들기 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N;
	static int[] operatorCnt;
	static int[] numbers;
	static int[] values;
	static int[] pick;
	static boolean[] visit;
	static int max = Integer.MIN_VALUE;
	static int min = Integer.MAX_VALUE;
	static String operator = "";
	public static void main(String[] args) throws NumberFormatException, IOException{
		int T = Integer.parseInt(br.readLine());
		for(int testcase=1;testcase<=T;testcase++){
			setData();
			nPr(0);
			System.out.println("#"+testcase+" "+(max-min));
		}
	}
	private static void nPr(int depth) {
		if(depth==(N-1)){
			copy();
			calculator();
			return;
		}
		for(int i=0;i<(N-1);i++) {
			if(visit[i]==false){
				visit[i] = true;
				pick[depth] = i;
				nPr(depth+1);
				visit[i] = false;
			}
		}
	}
	private static void copy() {
		values = new int[N];
		for(int i=0;i<N;i++) values[i] = numbers[i];
		
	}
	private static void calculator(){
		int result =0;
		for(int i=0;i<(N-1);i++){
			int leftValue = values[i];
			int rightValue = values[i+1];
			switch (operator.charAt(pick[i])){
			case '+':
				result = leftValue+rightValue;
				break;
			case '-':
				result = leftValue-rightValue;
				break;
			case '*':
				result = leftValue*rightValue;
				break;
			case '/':
				result = leftValue/rightValue;
				break;
			}
			System.out.print(operator.charAt(pick[i]));
			values[i] = result;
		}
		System.out.println();
		result = values[N-2];
		System.out.println(result);
		max = Math.max(result,max);
		min = Math.min(result,min);
	}
	private static void setData() throws NumberFormatException, IOException {
		N = Integer.parseInt(br.readLine());
		operatorCnt = new int[4];
		numbers = new int[N];
		pick = new int[N-1];
		visit = new boolean[N-1];
		max = Integer.MIN_VALUE;
		min = Integer.MAX_VALUE;
		st = new StringTokenizer(br.readLine());
		
		for(int i=0;i<4;i++) operatorCnt[i] = Integer.parseInt(st.nextToken());
		
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<N;i++) {
			numbers[i] = Integer.parseInt(st.nextToken());
		}
		for(int i=0;i<4;i++) {
			for(int j=0;j<operatorCnt[i];j++) {
				switch (i) {
				case 0:
					operator+="+";
					break;
				case 1:
					operator+="-";
					break;
				case 2:
					operator+="*";
					break;
				case 3:
					operator+="/";
					break;
				}
			}
		}
	}
}
