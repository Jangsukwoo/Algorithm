package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/*
 * 18:45~
 * 
 * 
 * 0은 빈칸
 * 1은 나의 돌
 * 2는 상대 돌
 * 
 * 돌 두개를 두어 죽일 수 있는 상대 돌의 최대 개수
 */
public class Baaaaaaaaaduk2 {
	static int[][] board;
	static int[][] testBoard;
	static int R,C;
	static int n;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static ArrayList<int[]> positions = new ArrayList<int[]>();
	static int[] pick;
	static int answer;
	public static void main(String[] args) throws IOException {
		setData();
		nCr(0,0);
	}
	private static void nCr(int idx, int depth){
		if(depth==2){
			setTestBoard();
			return;
		}
		for(int i=idx;i<n;i++) {
			pick[depth] = i;
			nCr(i+1,depth+1);
		}
	}
	private static void setTestBoard() {
		for(int row=0;row<R;row++) {
			for(int col=0;col<C;col++) {
				testBoard[row][col] = board[row][col];
			}
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		board = new int[R][C];
		testBoard = new int[R][C];
		pick = new int[2];
		for(int row=0;row<R;row++){
			st = new StringTokenizer(br.readLine());
			for(int col=0;col<C;col++){
				board[row][col] = Integer.parseInt(st.nextToken());
				if(board[row][col]==0) positions.add(new int[] {row,col});
			}
		}
		n = positions.size();
	}
}
