package SWExpertAcademy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;
/*
 * 숫자 버튼이 고장나서 몇 개의 숫자 버튼과 곱하기 버튼, 게산 버튼이있음
 * 숫자 X 를 만드는 최소 버튼 수 
 */
public class 지희의고장난계산기 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int X;
	static int Xsize;
	static int push;
	static ArrayList<Integer> numberlist;
	static class Before{
		String num;
		boolean multiple = false;
		int push;
		public Before(String num, boolean multiple,int push) {
			this.num = num;
			this.multiple = multiple;
			this.push = push;
		}
		
	}
	public static void main(String[] args) throws NumberFormatException, IOException {
		int T = Integer.parseInt(br.readLine());
		for(int testcase=1;testcase<=T;testcase++) {
			setData();			
			BruteForce();
		}
	}
	
	private static void BruteForce() {
		for(Integer startNumber : numberlist) bfs(startNumber);
		
	}

	private static void bfs(Integer startNumber) {
		Queue<Before> q = new LinkedList<Before>();
		q.add(new Before(Integer.toString(startNumber),false,0));
		while(!q.isEmpty()){
			int size = q.size();
			for(int i=0;i<size;i++) {
				Before currentBefore = q.poll();
				if(Integer.parseInt(currentBefore.num)==X){
					push = Math.min(currentBefore.push,push);
				}
				if(currentBefore.multiple==false){//곱셉이 아니면
					if(currentBefore.num.length()<Xsize){
						for(Integer nextNumber : numberlist){
							
						}
					}
				}else if(currentBefore.multiple){//곱셈이면
					
				}
			}
		}
	}

	private static void setData() throws NumberFormatException, IOException {
		st = new StringTokenizer(br.readLine());
		numberlist = new ArrayList<Integer>();
		for(int i=0,num;i<10;i++) {
			num=Integer.parseInt(st.nextToken());
			if(num!=0) numberlist.add(i);
		}
		st = new StringTokenizer(br.readLine());
		String target = st.nextToken();
		Xsize = target.length();
		X = Integer.parseInt(target);
		push = Integer.MAX_VALUE;
	}
}
