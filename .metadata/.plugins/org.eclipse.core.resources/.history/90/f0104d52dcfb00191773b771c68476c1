package Simulation;

import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Scanner;

/*
 * 그림을 배열로 표현하는 부분이 까다롭다..
 * 연습장에 엄청 그려보고 구현 방법 생각해냄
 * 6개의 화살표
 */
class Tile implements Comparable<Tile>{
	int id;
	int count;
	public Tile(int i, int c) {
		id = i;
		count = c;
	}
	@Override
	public int compareTo(Tile o) {
		if(this.count==o.count) return Integer.compare(this.id,o.id);
		return Integer.compare(this.count,o.count);
	}

}
public class 카탄의개척자 {
	static int[] dr = {0,-1,-1,0,-1,-1 };
	static int[] dc = {1,1,0,-1,-1,0 };//우->우상대각->상->좌상대각->....->우하대각 반시계방향
	//우 : 0, 상 : 2, 좌 : 4, 하 : 6
	static int[][] catanMap;
	static int[][] catanCount;
	static int[][] tileNumber;
	static int centerRow,centerCol;
	static PriorityQueue<Tile> pq;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		catanMap = new int[200][200];
		tileNumber = new int[10001][2];
		pq = new PriorityQueue<Tile>();
		centerRow = 49;
		centerCol = 49;
		makePQ();
		makeCatanMap();
		view();
		int T = sc.nextInt();
		for(int testcase=1;testcase<=T;testcase++){
			int n = sc.nextInt();
			System.out.println(catanMap[tileNumber[n][0]][tileNumber[n][1]]);
		}
	
	}
	private static void view() {
		for(int row=0;row<100;row++) {
			for(int col=0;col<100;col++) {
				System.out.print(catanMap[row][col]+" ");
			}
			System.out.println();
		}
		System.out.println();
	}
	private static void makePQ() {
		for(int i=1;i<=5;i++) {
			if(i==1) pq.add(new Tile(i,1));
			else pq.add(new Tile(i,0));
		}
	}
	private static void makeCatanMap() {
		int tile =1;
		while(tile<=10000){
			
		}
	}
}

