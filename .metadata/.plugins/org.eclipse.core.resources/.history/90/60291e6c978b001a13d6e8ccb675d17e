package BAEKJOON;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

/*
 * 
 */
public class Bitmap {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int R,C;
	static char[][] bitMap;
	static int[][] bitDistmap;
	static boolean[][] visit;
	static Queue<int[]> q;
	public static void main(String[] args) throws IOException {
		setData();
		getDistance();
	}
	private static void getDistance() {
		for(int row=0;row<R;row++) {
			for(int col=0;col<C;col++) {
				if(bitMap[row][col]=='1') bitDistmap[row][col]=0;
				else if(bitMap[row][col]=='0') {
					visit = new boolean[R][C];
					q = new LinkedList<int[]>();
					insertQueue(row,col);
					bfs();
				}
			}
		}
	}
	private static void bfs() {
		int dist=0;
		while(!q.isEmpty()){
			int size = q.size();
		}
	}
	private static void insertQueue(int row, int col) {
		q.add(new int[] {row,col});
		visit[row][col] = true;
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		bitMap = new char[R][C];
		bitDistmap = new int[R][C];
		for(int row=0;row<R;row++) {
			bitMap[row] = br.readLine().toCharArray();
		}
	}
}
