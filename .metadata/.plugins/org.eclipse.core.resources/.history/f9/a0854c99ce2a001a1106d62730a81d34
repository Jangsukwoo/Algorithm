package SDS;
/*
 * 슬라이딩 윈도우 !!!
 * 유튜브를 보니 구글 코딩 면접?에 나온 영상이 있었다.
 * Ex) Maximum Sum Subarray of Size K
 * 
 * https://www.youtube.com/watch?v=__guhvzO540
 * N개의 인트 배열과 양수 k가 주어진다.
 * K 사이즈를 갖는 인접,연속한 부분 수열중 최대 값을 찾기.
 * 즉 K개로 이루어진 부분 수열의 최대값은 얼마인지를 찾기
 * 
 * K=3 일 때
 * 2,1,5,1,3,2 는 5,1,3 으로 9가 최대값
 * 
 * K=4일 때
 * 1,9,-1,-2,7,3,-1,2 는 9,-1,-2,7로 13이 최대값
 * 
 * K Size를 Window라고 본다.
 * 
 * 
 * 두번째 예제에서
 * wSum과 mSum을 따로 선언해준 후 
 * 배열의 첫번째부의 window만큼 구해나간다.
 * wSum은 windowSum을 저장하고
 * mSum은 알고있는 최대값을 갱신,업데이트 한다.
 * 
 * 
 */
public class 시간복잡도_최솟값찾기_슬라이딩윈도우 {

}
