package CodingStudy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
/*
 * 11:22 시작
 */
public class 통나무옮기기 {
	static int N;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static boolean[][][] visitR;
	static boolean[][][] visitC;
	static char[][] plain;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static Log log;
	static Queue<Log> q;
	static int dist;
	static class Log{
		int hr,hc;
		int mr,mc;
		int tr,tc;
		public Log(int hr, int hc, int mr, int mc, int tr, int tc) {
			this.hr = hr;
			this.hc = hc;
			this.mr = mr;
			this.mc = mc;
			this.tr = tr;
			this.tc = tc;
		}
		
	}
	public static void main(String[] args) throws NumberFormatException, IOException {
		setData();
		bfs();
	}
	private static void bfs() {
		q = new LinkedList<Log>();
		insertQueue(log);
		while(!q.isEmpty()){
			int size = q.size();
			for(int i=0;i<size;i++) {
				Log currentLog = q.poll(); // 통나무 꺼냄
				for(int dir=0;dir<4;dir++){
					int nhr = currentLog.hr+dr[dir];
					int nhc = currentLog.hc+dc[dir];
					int nhc = currentLog.hc+dc[dir];
					int nhc = currentLog.hc+dc[dir];
					int nhc = currentLog.hc+dc[dir];
					int nhc = currentLog.hc+dc[dir];
 				}
			}
		}
	}
	private static void insertQueue(Log log) {
		// TODO Auto-generated method stub
		
	}
	private static void setData() throws NumberFormatException, IOException {
		N = Integer.parseInt(br.readLine());
		plain = new char[N][N];
		for(int row=0;row<N;row++) {
			plain[row] = br.readLine().toCharArray();
		}
		int cnt=0;
		visitR = new boolean[N][N][N];
		visitC = new boolean[N][N][N];
		for(int row=0;row<N;row++) {
			for(int col=0;col<N;col++) {
				if(plain[row][col]=='B') {
					if(cnt==0) {
						log = new Log(row,col,0,0,0,0);
						cnt++;
					}
					else if(cnt==1) {
						log.mr = row;
						log.mc = col;
						cnt++;
					}
					else if(cnt==2) {
						log.tr = row;
						log.tc = col;
					}
				}
			}
		}
	}
}
