package CodingTest;

import java.util.LinkedList;
import java.util.Queue;

public class 현카하1 {
	public static void main(String[] args) {
		solution(4,3,new int[][] {{1,1,2,4,3},{3,2,1,2,3},{4,1,1,4,3},{2,2,1,3,3}});
	}
	public static int[] solution(int rows, int columns, int[][] swipes) {

		int[] dr = {0,1,-1,0,0};
		int[] dc = {0,0,0,1,-1};

		int[] answer = {};
		int[][] board = getBoard(rows,columns);

		int swipeSize = swipes.length;

		Queue<Integer> q = new LinkedList<Integer>();

		for(int swipe = 1;swipe<=swipeSize;swipe++) {

			int dir = swipes[swipe][0];
			int ltr = swipes[swipe][1];
			int ltc = swipes[swipe][2];
			int rbr = swipes[swipe][3];
			int rbc = swipes[swipe][4];
			
			
			int[][] newBoard = new int[rows+1][columns+1];
			for(int row = ltr; row<= rbr; row++) {
				for(int col=ltc;col<=rbc ;col++) {
					int nr = row+dr[dir];
					int nc = col+dc[dir];
				}
			}

		}

		return answer;
	}
	private static int[][] getBoard(int R, int C) {
		int[][] board = new int[R+1][C+1];
		int num = 1;
		for(int row=1;row<=R;row++) {
			for(int col=1;col<=C;col++) {
				board[row][col] = num;
				num++;
			}
		}
		return board;
	}
}
