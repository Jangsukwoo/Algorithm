package BAEKJOON;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class 게리멘더링 {
	static int N;
	static int[] people;
	static int[][] area;
	static boolean[] alliance;
	static int min;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		people = new int[N+1];
		area = new int[N+1][N+1];
		min = (Integer.MAX_VALUE/2);
		for(int i=1;i<=N;i++) people[i] = sc.nextInt();
	
		for(int i=1;i<=N;i++) {
			int connect = sc.nextInt();
			for(int j=0; j<connect;j++) {
				int target = sc.nextInt();
				area[i][target] = 1;
			}
		}
		for(int num=1;num<=N;num++) {
			for(int connect=1;connect<=N;connect++) {
				alliance = new boolean[N+1];
				alliance[num]=true;
				firstBFS(connect,num);
				secondBFS();	
			}
					
		}
	
		view();
	}
	private static void firstBFS(int connect, int num){
		Queue<Integer> q = new LinkedList<Integer>();
		q.add(num);
		while(!q.isEmpty()) {
			
		}
	}
	private static void secondBFS() {
		
	}
	private static void view() {
		for(int row=1;row<=N;row++) {
			for(int col=1;col<=N;col++) {
				System.out.print(area[row][col]);
			}
			System.out.println();
		}
		System.out.println();
	}
}
