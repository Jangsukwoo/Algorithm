package CodingStudySamsungProblem;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/*
 * N by N 격자판
 * 0 : 흰색  -> 그 칸으로 이동
 * 1 : 빨간색 -> 쌓여있는 말의 순서를 바꿈 
 * 2: 파란색  -> A번 말의 이동방향을 반대로 하고 한 칸 이동
 * 단, 이동하려는 칸이 파란색인 경우에는 이동 하지 않고 방향만 반대 
 * 
 * 말의 이동정보가 주어지고 임의의 말이 업고있는 말이 4이상이 되는 턴을 출력
 * 
 */
public class 새로운게임2 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[][] ground;
	static int[] dr = {0,0,0,-1,1};
	static int[] dc = {0,1,-1,0,0};//1번부터 우좌상하
	static ArrayList<Horse>[][] horseMap; 
	static int N,K;
	static class Horse{
		int row;
		int col;
		int dir;
		public Horse(int row, int col, int dir) {
			this.row = row;
			this.col = col;
			this.dir = dir;
		}		
	}
	public static void main(String[] args) throws IOException {
		setData();
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		ground = new int[N][N];
		horseMap = new ArrayList[N][N];
	}
}
