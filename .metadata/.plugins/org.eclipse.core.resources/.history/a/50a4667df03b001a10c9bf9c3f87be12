package CodingStudySamsungProblem;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/*
 * 2차원 격자맵이 있고
 * 0 : 빈칸
 * 1 : 벽
 * 2 : 바이러스
 * 
 * 0인칸에 3개를 뽑는 모든 경우의 수에 대해 테스트 
 */
public class 연구소 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[][] lab;
	static int N,M;
	static int maxSize;
	static ArrayList<int[]> wallList;
	static ArrayList<int[]> virusList;
	static int wallListSize;
	static int[] pickWall = new int[3];
	static boolean[][] visit;
	public static void main(String[] args) throws IOException {
		setData();	
		nCr(0,0);
	}
	private static void nCr(int idx, int depth) {
		if(depth==3){
			return;
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		lab = new int[N][M];
		wallList = new ArrayList<int[]>();
		virusList = new ArrayList<int[]>();
		for(int row=0;row<N;row++) {
			st = new StringTokenizer(br.readLine());
			for(int col=0;col<M;col++) {
				lab[row][col] = Integer.parseInt(st.nextToken());
				if(lab[row][col]==0) wallList.add(new int[] {row,col});
				if(lab[row][col]==2) virusList.add(new int[] {row,col});
			}
		}
		wallListSize = wallList.size(); //n, r=3
	}
}
