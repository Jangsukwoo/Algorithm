package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

/*
 * 18:43~
 * F(A) A에 물을 가득 채움
 * E(A) A의 물을 모두 버림
 * M(A,B) 
 * A의 물을 B에 부음. 
 * 만약
 * A에 남아있는 물의 양이 B에 남아있는 빈공간보다
 * 적거나 같으면 A를 B에 다 부음
 * 만약  
 * A에 남아있는 물의 양이 B에 남아있는 공간보다 많으면
 * B를 꽉채우고 A에 남김 
 */
public class 물통 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int waterA,waterB;
	static int A,B;
	static boolean[][] visit;
	static Queue<int[]> q = new LinkedList<int[]>();
	
	public static void main(String[] args) throws IOException {
		setData();
		bfs();
	}
	private static void bfs(){
		int work;
		while(!q.isEmpty()){
			int size = q.size();
			for(int i=0;i<size;i++) {
				int[] current = q.poll();
				int a = current[0];
				int b = current[1];
			}
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		waterA = Integer.parseInt(st.nextToken());
		waterB = Integer.parseInt(st.nextToken());
		visit = new boolean[waterA+1][waterB+1];
		A = Integer.parseInt(st.nextToken());
		B = Integer.parseInt(st.nextToken());
		insertQueue(0,0);
	}
	private static void insertQueue(int a, int b) {
		q.add(new int[] {a,b});
		visit[a][b] = true;
	}
}
