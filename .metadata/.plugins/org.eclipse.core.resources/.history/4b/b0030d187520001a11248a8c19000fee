package CodingStudy;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

/*
 * RxC의 맵이 주어짐 
 * 1<=R,C<=1000
 * 맵을 구성하는 문자에서 
 * # : 벽
 * . : 갈 수 있는 공간
 * J : 지훈이의 최초 위치
 * F : 블
 * 
 * 지훈이는 인접한 4방향으로 이동하고
 * 불은 인접한 4방향으로 번진다 
 * 지훈이와 불은 벽은 통과하지 못함
 * 
 */
class FireAndJihun{
	int fireRow,fireCol;
	int jihunRow,jihunCol;
	int ID;
	public FireAndJihun(int fr,int fc, int jr, int jc, int id) {
		fireRow = fr;
		fireCol = fc;
		jihunRow = jr;
		jihunCol = jc;
		ID = id;
	}
}
public class 불 {
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static char[][] maze;
	static boolean[][] visit;
	static Queue<FireAndJihun> q = new LinkedList<FireAndJihun>();
	static int R,C; //(1<=R,C<=1000)
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		R = sc.nextInt();
		C = sc.nextInt();
		maze = new char[R][C];
		visit = new boolean[R][C];
		sc.nextLine();//뉴라인 먹고
		for(int row=0;row<R;row++) {
			String readLine = sc.nextLine();
			maze[row] = readLine.toCharArray();
			for(int col=0;col<C;col++) {
				if(maze[row][col]=='J') {
					q.add(new FireAndJihun(0,0,row,col,2));//지훈
					visit[row][col]=true;
				}
				if(maze[row][col]=='F') {
					
				}
			}
		}
			
	}
}
