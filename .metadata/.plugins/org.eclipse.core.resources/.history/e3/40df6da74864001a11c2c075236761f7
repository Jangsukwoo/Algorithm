package BAEKJOON;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/*
 * 함께 볼록 쌓기 
 * 
 * N명의 학생
 * M개의 최대 보유 블록
 * H는 목표 높이
 */
public class 함께블록쌓기 {
	static int N,M,H;
	static int possibleCase;
	static ArrayList<Integer>[] blocklistOfStudent;
	public static void main(String[] args) throws IOException {
		setData();
		dfs(1,0);
		System.out.println(possibleCase);
	}
	private static void dfs(int studentNumber, int sum){
		if(sum>H) return;
		if(studentNumber==(N+1)){
			if(sum==H) possibleCase++;
			return;
		}
		for(int blockNumber=0;blockNumber<blocklistOfStudent[studentNumber].size();blockNumber++){//가진 블록들
			int trySum = sum+blocklistOfStudent[studentNumber].get(blockNumber);
			System.out.println("현재학생번호"+studentNumber);
			System.out.println("더해온거"+sum);
			System.out.println("더해본수"+trySum);
			if(trySum<=H) dfs(studentNumber+1,trySum);//더해도 작으면보내고
			else dfs(studentNumber+1,sum);//크면 무시하고 
		}
	}
	private static void setData() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		H = Integer.parseInt(st.nextToken());
		blocklistOfStudent = new ArrayList[N+1];
		for(int i=1;i<=N;i++) blocklistOfStudent[i] = new ArrayList<Integer>();
		
		for(int i=1;i<=N;i++){
			st = new StringTokenizer(br.readLine());
			System.out.println("토큰수"+st.countTokens());
			int tokenSize = st.countTokens();
			for(int j=0,height;j<=tokenSize;j++){
				height = Integer.parseInt(st.nextToken());
				System.out.println("학생번호"+i+"높이"+height+"j값"+j);
				blocklistOfStudent[i].add(height);
			}
		}
	}
}
