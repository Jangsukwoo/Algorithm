package BAEKJOON;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

//8방향
//모래성이 쌓여있지 않은 개수
//자기 모래성의 튼튼함보다 많거나 같으면 무너짐
class sandCastleHW{
	int height,width;
	
	public sandCastleHW(int h,int w) {
		height = h;
		width = w;
	}
}
public class 모래성 {
	static char[][] sandCastle;
	static int H,W;
	static int[] dH = {-1,-1,0,1,1,1,0,-1};
	static int[] dW = {0,1,1,1,0,-1,-1,-1};//12시부터 시계방향
	static Queue<sandCastleHW> q = new LinkedList<sandCastleHW>();
	static int count;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		H = sc.nextInt();
		W = sc.nextInt();
		sandCastle = new char[H][W];
		String tmp;
		sc.nextLine();
		for(int r=0;r<H;r++) {
			tmp = sc.nextLine();
			sandCastle[r] = tmp.toCharArray();
		}
		for(int r=0;r<H;r++) {
			for(int c=0;c<W;c++){
				if(sandCastle[r][c]!='.' && sandCastle[r][c]!='9'){
					q.add(new sandCastleHW(r, c));
				}
			}
		}
		//int t = Character.getNumericValue(ch)
		
		simulation();
		
		//view();
		
	}
	private static void simulation() {
		while(!q.isEmpty()){
			int size = q.size();
			boolean[][] CheckMap = new boolean[H][W];
			for(int i=0; i<size;i++) {
				
				sandCastleHW curSandHW = q.poll();
				int nH=0;
				int nW=0;
				int sum=0;
				for(int dir=0;dir<8;dir++){//8방향 보기
					nH = curSandHW.height+dH[dir];
					nW = curSandHW.width+dW[dir];
					if(rangeCheck(nH,nW)){//영역 만족시
						if(sandCastle[nH][nW]=='.') sum++; 
					}
				}//8방향 검사 끝
				
				//주변에 모래성없는 바닥 개수가 같거나 크면
				if(sum>=Character.getNumericValue(sandCastle[curSandHW.height][curSandHW.width])){
					CheckMap[curSandHW.height][curSandHW.width] = true;
				}else{
					q.add(new sandCastleHW(curSandHW.height,curSandHW.width));
				}
			}
			count++:
		}
	}
	

	private static boolean rangeCheck(int nH, int nW) {
		if(nH>=0 && nH<H && nW>=0 && nW<W) return true;
		return false;
	}
	private static void view() {
		for(int r=0;r<H;r++) {
			for(int c=0;c<W;c++) {
				System.out.print(sandCastle[r][c]+" ");
			}
			System.out.println();
		}

	}
	
	
}

