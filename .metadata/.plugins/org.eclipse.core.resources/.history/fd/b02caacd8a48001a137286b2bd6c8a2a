package CodingStudySamsungProblem;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;
/*
 * 격자 맵에 0,1,2 숫자가 적혀있다.
 * 0:빈칸, 1:벽, 2:바이러스 
 * 최초의 바이러스 상태는 모두 비활성화 상태
 * 활성 바이러스가 비활성 바이러스 상태로 가면
 * 비활성 바이러스는 활성화 상태롭 변신
 * 
 * M개를 선택해서 활성화 시킨다.
 * 
 * 모든 빈 칸에 바이러스를 퍼뜨리는 최소 시간을 구하자.
 * DFS 바이러스를 놓는 경우의 수 + BFS 확산
 * 
 */
public class 연구소3 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N,M;//연구소 크기, 놓을 수 있는 바이러스 개수
	static int[][] laboratory;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static ArrayList<Virus> viruslist = new ArrayList<Virus>();
	static int[] pickVirus;
	static class Virus{
		int row;
		int col;
		public Virus(int row, int col) {
			this.row = row;
			this.col = col;
		}
	}
	public static void main(String[] args) throws IOException {
		setData();
		pickVirus();
	}
	private static void pickVirus() {
		dfs(0,0);
	}
	private static void dfs(int idx, int depth) {
		if(depth==M){//바이러스 M개 고름
			
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		for(int row=0;row<N;row++) {
			st = new StringTokenizer(st.nextToken());
			for(int col=0;col<N;col++) {
				laboratory[row][col] = Integer.parseInt(st.nextToken());
				if(laboratory[row][col]==2) viruslist.add(new Virus(row,col));
			}
		}
		pickVirus = new int[viruslist.size()];
	}
}
