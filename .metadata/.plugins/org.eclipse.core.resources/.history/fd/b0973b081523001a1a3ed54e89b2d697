package winterSDS;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

/*
 * 완성된 스도쿠에서 
 * K개의 숫자가 틀린 스도쿠가 주어진다.
 * 1<=K<=3
 * 
 * 바꾸려는 좌표와 바꾸려는 값을 공백을 두어 출력
2
1
3 2 4 8 9 1 5 6 7
8 1 9 7 6 5 2 4 3
7 5 6 3 4 2 1 9 8
6 7 1 4 5 3 8 2 9
4 3 5 9 2 8 5 1 6
9 8 2 6 1 7 3 5 4
2 9 3 1 8 6 4 7 5
1 6 8 5 7 4 9 3 2
5 4 7 2 3 9 6 8 1
3
3 2 4 8 9 1 5 6 7
8 1 9 7 6 5 2 4 3
7 5 6 3 4 2 1 9 8
6 7 1 4 5 3 8 2 9
4 3 5 9 2 8 5 1 6
9 8 2 6 4 7 3 5 4
2 9 3 1 9 6 4 7 5
1 6 8 5 7 4 9 3 2
5 4 7 2 3 9 6 8 1

//정상스도쿠
1
3 2 4 8 9 1 5 6 7
8 1 9 7 6 5 2 4 3
7 5 6 3 4 2 1 9 8
6 7 1 4 5 3 8 2 9
4 3 5 9 2 8 7 1 6
9 8 2 6 1 7 3 5 4
2 9 3 1 8 6 4 7 5
1 6 8 5 7 4 9 3 2
5 4 7 2 3 9 6 8 1 

 */
public class searchKforSudoku {
	static int[][] sudokuMap;
	static int[] countMap;//숫자 출현 빈도 저장하기
	static int K;//(1<=K<=3)
	static ArrayList<Integer> insertNumberList;
	static int find;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		for(int testcase=1;testcase<=T;testcase++) {
			K = sc.nextInt();
			sudokuMap = new int[9][9];
			countMap = new int[10];
			insertNumberList = new ArrayList<Integer>();
			for(int row=0;row<9;row++) {
				for(int col=0;col<9;col++) {
					sudokuMap[row][col] = sc.nextInt();
				}
			}
			//처리
			findK();
			System.out.println(Arrays.toString(countMap));
			System.out.println(insertNumberList.toString());
		}
	}
	private static void findK() {
		setCountMap();
		for(int row=0;row<9;row++) {
			for(int col=0;col<9;col++) {
				//if(rowCheck(row,col) && colCheck)
			}
		}
	}
	private static void setCountMap() {
		for(int row=0;row<9;row++) {
			for(int col=0;col<9;col++) {
				countMap[sudokuMap[row][col]]+=1;
			}
		}
		for(int num=1;num<=9;num++) {
			if(countMap[num]<9){
				for(int i=0;i<(9-countMap[num]);i++) insertNumberList.add(num);
			}
		}
	}
}
