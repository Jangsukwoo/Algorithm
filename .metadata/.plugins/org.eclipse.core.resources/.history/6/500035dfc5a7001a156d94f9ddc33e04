package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class 수영장만들기 {
	static int R,C;
	static int[][] ground;
	static int[][] swimmingPool;
	static int maxHeight = 1;
	static int minHeight = 9;
	static Queue<int[]> q = new LinkedList<int[]>();
	static boolean[][] visit;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException {
		setData();
		bfsAll();
	}
	private static void bfsAll() {
		for(int height=maxHeight;height>minHeight;height--){
			for(int row=0;row<R;row++) {
				for(int col=0;col<C;col++) {
					if(height==swimmingPool[row][col]) {
						
					}
				}
			}
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		ground =  new int[R][C];
		swimmingPool = new int[R][C];
		for(int row=0;row<R;row++) {
			char[] line = br.readLine().toCharArray();
			for(int col=0;col<C;col++) {
				ground[row][col] = Character.getNumericValue(line[col]);
				if(ground[row][col]>maxHeight) maxHeight=ground[row][col];
				if(ground[row][col]<minHeight) minHeight=ground[row][col];
			}
		}
		for(int row=0;row<R;row++) {
			for(int col=0;col<C;col++) {
				swimmingPool[row][col] = maxHeight;//물 다 채움
			}
		}
	}
}
