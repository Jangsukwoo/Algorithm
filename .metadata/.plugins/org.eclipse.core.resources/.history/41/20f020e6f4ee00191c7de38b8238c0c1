package Samsung;

/*
 * 시작 1045
 * 경사로의 길이 L
 * 경사로의 높이는 무조건 1
 * 
 */

import java.util.Scanner;

public class 기출_경사로 {
	static int N,L;
	static int[][] roadMap;
	static int possibleRoad;
	static boolean[][] slipwayRow;
	static boolean[][] slipwayCol;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		L = sc.nextInt();
		roadMap = new int[N][N];
		slipwayRow= new boolean[N][N];
		slipwayCol= new boolean[N][N];
		for(int row=0;row<N;row++)
			for(int col=0;col<N;col++) roadMap[row][col] = sc.nextInt();
		
		possibleCheck();
		
		System.out.println(possibleRoad);
	}
	private static void possibleCheck(){
		int height=0;
		boolean possible=true;
		for(int row=0;row<N;row++) {
			height = roadMap[row][0];
			possible=true;
			for(int col=1;col<N;col++){
				if(height==roadMap[row][col]) continue;//높이가 같으면 그냥 진행
				else if(roadMap[row][col]-height==1){//오르막길이면
					for(int l=1;l<=L;l++){//경사로 체크
						if((col-l)>=0){//범위 만족
							if(roadMap[row][col-l]==height ) continue;	
						}else{
							possible = false;
							break;
						}
					}
					if(possible){
						for(int l=1;l<=L;l++) slipwayRow[row][col-l] = true;
						height++;
					}
				}else if(roadMap[row][col]-height==-1){//내리막길이면
					for(int l=0;l<L;l++){//경사로 체크
						if((col+l)<N){//범위 만족
							if(roadMap[row][col+l]==(height-1)) continue;	
							else {
								possible = false;
								break;
							}
						}else{
							possible = false;
							break;
						}
					}
					if(possible) height--;
				}else {
					possible = false;
					break;
				}
			}
			if(possible) {
				System.out.println("가능한 행번호:"+row);
				possibleRoad++;
			}
		}
		
		
		for(int col=0;col<N;col++) {
			height = roadMap[0][col];
			possible=true;
			for(int row=1;row<N;row++){
				if(height==roadMap[row][col]) continue;//높이가 같으면 그냥 진행
				else if(roadMap[row][col]-height==1){//오르막길이면
					for(int l=1;l<=L;l++){//경사로 체크
						if((row-l)>=0){//범위 만족
							if(roadMap[row-l][col]==height) continue;	
						}else{
							possible = false;
							break;
						}
					}
					if(possible) height++;
				}else if(roadMap[row][col]-height==-1){//내리막길이면
					for(int l=0;l<L;l++){//경사로 체크
						if((row+l)<N){//범위 만족
							if(roadMap[row+l][col]==(height-1)) continue;	
							else {
								possible = false;
								break;
							}
						}else{
							possible = false;
							break;
						}
					}
					if(possible) height--;
				}else {
					possible = false;
					break;
				}
			}
			if(possible) {
				System.out.println("가능한 열번호:"+col);
				possibleRoad++;
			}
		}
	}
}
