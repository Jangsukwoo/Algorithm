package Samsung;

import java.util.Arrays;
import java.util.Scanner;

/*
 * 각 날짜의 최대 수익을 메모이제이션하자.
 */
class DayReservation{
	int term;
	int pay;
	public DayReservation(int t, int p) {
		term = t;
		pay = p;
	}
}
public class 기출_퇴사 {
	static int N;
	static int[] maxDaybenefit;
	static int maxBenefit;
	static DayReservation[] reservation;
	public static void main(String[] args) {
			Scanner sc = new Scanner(System.in);
			N = sc.nextInt();
			maxDaybenefit = new int[N];
			reservation = new DayReservation[N];
			for(int i=0;i<N;i++) {
				int t = sc.nextInt();
				int p = sc.nextInt();
				reservation[i] = new DayReservation(t,p);
			}//입력 끝
			
			int beforeMax=0;
			int newMax = 0;
			int endDay=0;
			for(int day=0;day<N;day++){//매일 최대 수익 메모
				System.out.println("day"+(day+1));
				System.out.println(Arrays.toString(maxDaybenefit));
				if(reservation[day].term==1){//당일 상담이면
					beforeMax = maxDaybenefit[day];
					newMax = maxDaybenefit[day] + reservation[day].pay;
					maxDaybenefit[day] = Math.max(beforeMax, newMax);
				}
				else if(reservation[day].term>1){//1일 이상 걸리는 상담이라면
					if(day>0){
						maxDaybenefit[day] = Math.max(maxDaybenefit[day-1],maxDaybenefit[day]);
					}
					if(reservation[day].term+day<N){ 
						//day ~ endDay까지.

						endDay = reservation[day].term+day;
						beforeMax = maxDaybenefit[endDay];
						if(day>0) newMax = maxDaybenefit[endDay] + reservation[day-1].pay;
						else if(day==0) newMax = maxDaybenefit[endDay] + reservation[day].pay;
						maxDaybenefit[endDay] = Math.max(beforeMax, newMax);
						if(day==1) {
//						System.out.println("endDay는"+endDay);	
//						System.out.println("maxEndDay는"+maxDaybenefit[endDay]);
//						System.out.println();
						}
					}
				}
				System.out.println("계산후");
				System.out.println(Arrays.toString(maxDaybenefit));
				System.out.println();
			}	
			//for(int day=0;day<N;day++) maxBenefit+= maxDaybenefit[day];
			System.out.println(maxBenefit);
	}
}
