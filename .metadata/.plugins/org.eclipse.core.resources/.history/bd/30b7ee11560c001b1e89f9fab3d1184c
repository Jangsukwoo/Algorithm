package SamsungDS;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class 차량정비소 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N,M,K,A,B;
	static int[] receipt;
	static int[] repair;
	static Customer[] customers;
	static PriorityQueue<Customer> receiptWatingQueue;
	static PriorityQueue<Customer> repairWatingQueue;
	static int answer;
	static class Customer implements Comparable<Customer>{
		int id;
		int arrivalTime;
		int receiptId;
		int repairId;
		public Customer(int id, int arrivalTime, int receiptId, int repairId) {
			this.id = id;
			this.arrivalTime = arrivalTime;
			this.receiptId = receiptId;
			this.repairId = repairId;
		}
		@Override
		public int compareTo(Customer o) {
			if(this.arrivalTime==o.arrivalTime) return Integer.compare(this.id,o.id);
			return Integer.compare(this.arrivalTime,o.arrivalTime);
		}
	}
	public static void main(String[] args) throws NumberFormatException, IOException {
		int T = Integer.parseInt(br.readLine());
		for(int testcase=1;testcase<=T;testcase++) {
			setData();
			
		}
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken()); //접수 창구 수
		M = Integer.parseInt(st.nextToken()); //정비 창구 수
		K = Integer.parseInt(st.nextToken()); //방문 고객 수
		A = Integer.parseInt(st.nextToken()); 
		B = Integer.parseInt(st.nextToken());
		receipt = new int[N+1];
		repair = new int[M+1];
		st = new StringTokenizer(br.readLine());
		for(int i=1;i<=N;i++) receipt[i] = Integer.parseInt(st.nextToken());
		st = new StringTokenizer(br.readLine());
		for(int i=1;i<=M;i++) repair[i] = Integer.parseInt(st.nextToken());
		receiptWatingQueue = new PriorityQueue<Customer>();
		repairWatingQueue = new PriorityQueue<Customer>();
		customers = new Customer[K+1];
		st = new StringTokenizer(br.readLine());
		for(int i=1;i<=K;i++) {
			int arriavalTime = Integer.parseInt(st.nextToken());
			customers[i] = new Customer(i, arriavalTime, 0, 0);
			repairWatingQueue.add(customers[i]);
		}
	}
}
