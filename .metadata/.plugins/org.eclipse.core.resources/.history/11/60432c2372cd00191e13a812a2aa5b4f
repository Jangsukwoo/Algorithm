import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

class ICE{
	int row;
	int col;
	int height;

	ICE(int row,int col,int height){
		this.row = row;
		this.col = col;
		this.height = height;
	}
}

public class 빙산 {
	static int N,M;//N행 M열
	static int[][] sea;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};//상우하좌
	static Queue<ICE> iceQueue = new LinkedList<ICE>();
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		sea = new int[N][M];
		for(int row=0;row<N;row++) {
			for(int col=0;col<M;col++) {
				sea[row][col] = sc.nextInt();
				if(sea[row][col]!=0) iceQueue.add(new ICE(row, col, sea[row][col])); //빙산들 큐에 넣기
			}
		}
		while(!iceQueue.isEmpty()){//BFS

			int iceSize = iceQueue.size();
			for(int i=0; i<iceSize;i++) {
				ICE curICE = iceQueue.poll();
				for(int dir=0;dir<4;dir++) {
					int nr = curICE.row+dr[dir];
					int nc = curICE.col+dc[dir];
					
					if(rangeCheck(nr,nc))

				}
			}
		}
	}
	private static boolean rangeCheck(int nr, int nc) {
		if((nr>=0 && nr<N) && (nc>=0 && nc<M)) return true;
		return false;
	}
}