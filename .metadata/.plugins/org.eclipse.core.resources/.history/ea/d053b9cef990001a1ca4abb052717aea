package 구현;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * 15:30~
 * 지뢰찾기
 */
public class 지뢰찾기 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static char[][] board;
	static int N;
	static int[] dr = {-1,-1,0,1,1,1,0,-1};
	static int[] dc = {0,1,1,1,0,-1,-1,-1};
	public static void main(String[] args) throws NumberFormatException, IOException {
		setData();
		setBomb();
	}
	private static void setBomb() {
		int num = 0;
		while(num<=8){
			findBomb(num);
			view();
			num++;
		}
		
	}
	private static void view() {
		for(int row=0;row<N;row++) {
			for(int col=0;col<N;col++) {
				System.out.print(board[row][col]);
			}
			System.out.println();
		}
		System.out.println();
	}
	private static void findBomb(int num){
		
		for(int row=0;row<N;row++){
			for(int col=0;col<N;col++) {
				int sharpCnt=0;
				if(board[row][col]==((char) num+'0')){
					System.out.println(num);
					if(num==0){
						for(int dir=0;dir<8;dir++) {
							int nr = row+dr[dir];
							int nc = col+dc[dir];
							if(rangeCheck(nr,nc)) {
								board[nr][nc] = ' ';
							}
						}
					}else{//지뢰
						for(int dir=0;dir<8;dir++) {
							int nr = row+dr[dir];
							int nc = col+dc[dir];
							if(rangeCheck(nr,nc)) {
								if(board[nr][nc]=='#' || board[nr][nc]=='*') sharpCnt++;
							}
						}
						if(num==3) System.out.println("샤프카운트"+sharpCnt);
						if(sharpCnt==num) {
							if(num==3) System.out.println("넘버 3임");
							for(int dir=0;dir<8;dir++) {
								int nr = row+dr[dir];
								int nc = col+dc[dir];
								if(rangeCheck(nr,nc)) {
									if(board[nr][nc]=='#') board[nr][nc]='*';//지뢰설치
								}
							}
						}
					}
				}
			}
		}
	}
	private static boolean rangeCheck(int nr, int nc) {
		if(nr>=0 && nr<N && nc>=0 && nc<N) {
			if(board[nr][nc]=='#') return true;
		}
		return false;
	}
	private static void setData() throws NumberFormatException, IOException {
		N = Integer.parseInt(br.readLine());
		board = new char[N][N];
		for(int row=0;row<N;row++) board[row] = br.readLine().toCharArray();		
	}
}
