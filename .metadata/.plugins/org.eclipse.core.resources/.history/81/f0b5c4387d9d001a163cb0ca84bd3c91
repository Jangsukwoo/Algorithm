package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/*
 * 13:56~
 */
public class 새로운게임2{
	static int N,K;
	static int[][] chess;
	static Horse[] horse;
	static int turn=0;
	static ArrayList<Horse>[][] horseMap;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static boolean end;
	static int[] dr = {0,0,0,-1,1};
	static int[] dc = {0,1,-1,0,0};//1,2,3,4
	static class Horse{
		int row;
		int col;
		int dir;
		int num;
		public Horse(int row, int col, int dir) {
			this.row = row;
			this.col = col;
			this.dir = dir;
		}
	}
	public static void main(String[] args) throws IOException {
		setData();
		simulation();
	}
	private static void simulation() {
		while(turn<=1000) {
			for(int i=0;i<K;i++) {
				//업고 간다.
				move(horse[i]);
			}
		}
	}
	private static void move(Horse horse) {
		int currentIdx = getCurrenthorseIdx();
	}
	private static int getCurrenthorseIdx() {
		e
		return 0;
	}
	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		chess = new int[N][N];
		horseMap = new ArrayList[N][N];
		horse = new Horse[K];
		for(int row=0;row<N;row++) {
			st = new StringTokenizer(br.readLine());
			for(int col=0;col<N;col++){
				horseMap[row][col] = new ArrayList<Horse>();
				chess[row][col] = Integer.parseInt(st.nextToken());
			}
		}
		for(int i=0,row,col,dir;i<K;i++) {
			st = new StringTokenizer(br.readLine());
			row = Integer.parseInt(st.nextToken());
			col = Integer.parseInt(st.nextToken());
			dir = Integer.parseInt(st.nextToken());
			horse[i] = new Horse(row, col, dir);
			horseMap[row][col].add(horse[i]);
		}
	}
}
