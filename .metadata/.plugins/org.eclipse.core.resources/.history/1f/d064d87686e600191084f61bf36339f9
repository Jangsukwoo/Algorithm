package Samsung;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

class VirusCoordination{
	int row;
	int col;
	public VirusCoordination(int r,int c){
		row = r;
		col = c;
	}
}
public class 기출_연구소3 {
	static int N;//연구소 크기
	static int M;//바이러스 개수
	static int[][] area;
	static int[][] testingArea;
	static ArrayList<VirusCoordination> virusList = new ArrayList<VirusCoordination>();
	static int[] vCoordination;
	static int[] virusCase;
	static int vCoordinationSize;
	static Queue<VirusCoordination> virusQueue = new LinkedList<VirusCoordination>();
	static boolean possible;
	static int time = Integer.MAX_VALUE;
	static int second;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};//상우하좌
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		area = new int[N][N];
		testingArea = new int[N][N];
		for(int row=0;row<N;row++){
			for(int col=0;col<N;col++){
				area[row][col] = sc.nextInt();
				if(area[row][col]==2) virusList.add(new VirusCoordination(row,col));
			}
		}
		virusCase = new int[M];
		vCoordinationSize = virusList.size();
		vCoordination = new int[vCoordinationSize];
		for(int num=0;num<vCoordinationSize;num++) vCoordination[num] = num;
		nCr(0,0);//모든 경우의 수 조사 n = vCoordinationSize , r = M
	}
	private static void nCr(int idx, int cnt){
		if(cnt==M){//각 경우에 대해
			setTestingArea();//테스팅 맵 세팅
			setActiveVirus();//바이러스 활성화
			BFS();//바이러스 확산
			return ;
		}
		for(int vNum=idx;vNum<vCoordinationSize;vNum++){
			virusCase[cnt] = vCoordination[vNum];
			nCr(vNum+1,cnt+1);
		}
	}
	private static void BFS() {
		second=0;
		while(!virusQueue.isEmpty()){
			second++;
			int size = virusQueue.size();
		}
	}
	private static void setTestingArea() {
		for(int row=0;row<N;row++)
			for(int col=0;col<N;col++) testingArea[row][col] = area[row][col];
	}
	private static void setActiveVirus() {
		for(int i=0;i<M;i++) {
			testingArea[virusList.get(virusCase[i]).row][virusList.get(virusCase[i]).col] = 3;
			virusQueue.add(new VirusCoordination(virusList.get(virusCase[i]).row, virusList.get(virusCase[i]).col));
		}
	}
}
