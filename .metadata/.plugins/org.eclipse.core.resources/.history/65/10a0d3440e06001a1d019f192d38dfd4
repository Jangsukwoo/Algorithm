package Samsung;

import java.util.Scanner;

/*
 * 08:07~
 * 3x3 배열 A
 * 연산의 형태는 두개
 * R : 모든 행에 대해 정렬 (행의개수>=열의개수)
 * C : 모든 열에 대해 정렬 (행의개수 <열의 개수)
 * 
 * 매번 연산마다 완전히 새로운 배열이 되는데
 * 그 새로운 배열의 값을 정하는 규칙은 다음과 같다.
 * 숫자를 먼저 쓰고 출현빈도수를 쓰는데 
 * 기존 데이터가 3,1,1인경우
 * 3이 1번 출현, 1이 2번 출현했다.
 * 숫자를 먼저 쓸건데 3과 1 중에 1이 출현빈도수가 더 높으므로
 * 3의 1을 먼저 쓰고
 * 출현빈도수인 1의 2를 써서 결국
 * 3 1 1 2 라는 새로운 배열이 탄생.
 * 즉, 3이 1개 출현, 1이 2개 출현  = 3 1 1 2 
 * 
 * 
 */

public class 기출_이차원배열과연산 {
	static int r,c,k;
	static int rowSize,colSize;
	static int[][] matrix;
	static int time;
	static boolean find;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		r = sc.nextInt();
		c = sc.nextInt();
		k = sc.nextInt();
		rowSize=colSize=3;
		matrix = new int[rowSize][colSize];//초기값
		for(int row=0;row<3;row++){
			for(int col=0;col<3;col++) {
				matrix[row][col] = sc.nextInt();
			}
		}
		while(true){
			if(r<=rowSize && c<=colSize){//찾으려고하는 값이 영역 내에 있으면 검사
				if(matrix[r-1][c-1]==k){
					find = true;
					break;
				}
			}
			if(rowSize>=colSize){//행에 대헤 정렬 연산 수행
				sortRow();
			}else{//열에 대해 정렬 연산 수행 
				sortCol();
			}
		}
	}
	private static void sortRow() {
		// TODO Auto-generated method stub
		int maxRowSize = 0;
		for(int row=0;row<rowSize;row++){//각 행에대해서
			for(int col=0;col<colSize;col++){
				if(matrix[row][col]!=0){
					
				}
			}
		}
	}
	private static void sortCol() {
		// TODO Auto-generated method stub
		
	}
}
