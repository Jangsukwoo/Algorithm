package 공채대비;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

/*
 * 16:35 시작
 */
public class 레이저통신 {
	static int W,H;
	static char[][] map;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[] dr = {-1,0,1,0};
	static int[] dc = {0,1,0,-1};
	static boolean[][] visit;
	static Queue<int[]> q = new LinkedList<int[]>();
	static int endR,endC;
	public static void main(String[] args) throws IOException {
		setData();
		bfs();
	}

	private static void bfs() {
		while(!q.isEmpty()){
			
		}
	}

	private static void setData() throws IOException {
		st = new StringTokenizer(br.readLine());
		W = Integer.parseInt(st.nextToken());
		H = Integer.parseInt(st.nextToken());
		map = new char[H][W];
		visit = new boolean[H][W];
		boolean flag=false;
		for(int row=0;row<H;row++) {
			map[row] = br.readLine().toCharArray();
			for(int col=0;col<W;col++) {
				if(map[row][col]=='C' && flag==false) {
					flag = true;
					insertQueue(row,col);
				}else if(map[row][col]=='C' && flag) {
					endR = row;
					endC = col;
				}
			}
		}
	}

	private static void insertQueue(int row, int col) {
		q.add(new int[] {row,col,-1,0});
		visit[row][col] = true;
	}
}
