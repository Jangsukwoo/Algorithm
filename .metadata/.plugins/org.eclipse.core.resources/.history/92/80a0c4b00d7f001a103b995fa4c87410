package CodingStudy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

/*
 * 1~2n까지 정수가 쓰여진 총 2n개의 카드 존재
 * 카드를 n장씩 반띵함
 * 규칙
 * 1.놓여진 카드가 없으면 카드를 냄
 * 2.놓여진 카드가 있으면 마지막에 나온 카드보다 큰 숫자가 적힌 카드를 냄
 * 3.낼 카드가 없으면 상대의 차례로 턴 넘어가고, 낼 카드는 사라짐
 * 
 * 둘 중 한명이라도 패가 없으면 게임 끝
 * 게임 종료시 상대방이 가지고 잇는 카드의 수를 점수로 획득.
 * 
 * 상근이 먼저 시작하고
 * 두 사람은 각자 낼 수 있는 카드 중 가장 작은 숫자를 먼저 내기로 함
 * 
 */
public class 카드캡터상근이 {
	static Queue<Integer> sang_guen_cards;
	static Queue<Integer> guen_sang_cards;
	static int n;
	static boolean[] cards;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	public static void main(String[] args) throws NumberFormatException, IOException {
		setData();
	}
	private static void setData() throws NumberFormatException, IOException {
		
		n = Integer.parseInt(br.readLine());
		cards = new boolean[(n*2+1)];
		
		sang_guen_cards = 
		guen_sang_cards = new ArrayList<Integer>();
		
		for(int i=0;i<n;i++) {
			int card = Integer.parseInt(br.readLine());
			sang_guen_cards.add(card);
			cards[card] = true;
		}
		
		for(int i=1;i<=(n*2);i++) {
			if(cards[i]==false) guen_sang_cards.add(i);
		}
	}
}
